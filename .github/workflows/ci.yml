name: CI

on:
  push:
    branches:
      - main
      - dev*

jobs:
  analyze_test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11.x
      - uses: subosito/flutter-action@v1
        with: # flutter --version
          flutter-version: 2.5.1
      - name: Decrypt Android keys
        run: sh ./android/decrypt.sh
        env:
          RELEASE_SECRET_PASSPHRASE: ${{ secrets.RELEASE_SECRET_PASSPHRASE }}
      - name: Decrypt iOS keys
        run: sh ./ios/decrypt.sh
        env:
          RELEASE_SECRET_PASSPHRASE: ${{ secrets.RELEASE_SECRET_PASSPHRASE }}
      - name: Install Flutter dependencies
        run: flutter pub get
      # - name: Analyze files
        # run: flutter analyze .
      - name: Run the tests
        run: flutter test --coverage
      - name: Upload coverage to codecov
        run: curl -s https://codecov.io/bash -t ${{ secrets.CODECOV_TOKEN }}
        shell: bash
      - name: Print outdated packages
        run: |
          echo 'OUTDATED_DEPENDENCIES<<EOF' >> $GITHUB_ENV
          flutter pub outdated >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      # TODO: BROKEN
      # - name: New Flutter outdated issue
      #   uses: imjohnbo/issue-bot@v3.3.1
      #   with:
      #     assignees: "louis030195"
      #     labels: "medium priority"
      #     title: Flutter outdated packages
      #     body: |-
      #       :wave: Hi, {{#each assignees}}@{{this}}{{#unless @last}}, {{/unless}}{{/each}}!
      #       ## These packages are outdated

      #       ```
      #       ${{ env.OUTDATED_DEPENDENCIES }}
      #       ```
      #     pinned: true
      #     close-previous: true
      #     linked-comments: true
      #     project: 1
          # column: To Do
      # Backend checks
      # - name: Decrypt service account key
      #   env:
      #     RELEASE_SECRET_PASSPHRASE: ${{ secrets.RELEASE_SECRET_PASSPHRASE }}
      #   run: |
      #     cd firebase/functions
      #     gpg --quiet --batch --yes --decrypt --passphrase="$RELEASE_SECRET_PASSPHRASE" \
      #     --output service-account.zip service-account.zip.gpg && unzip service-account.zip
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: npm install, build and test
        run: |
          cd firebase/functions
          npm i
          npm run build
          npm run lint
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: firestore-rules-tests
      #     path: firestore-rules-tests.json
