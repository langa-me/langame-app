syntax = "proto3";
package langame.protobuf;

// Note: models ids are usually not stored in Firestore since it already use id to index them
// it is mostly used within the logic of the front-end / services

message Topic {
  string id = 1;
  string content = 2;
}

message Question {
  string id = 1;
  string content = 2;
  repeated string contexts = 3;
}

message Tag {
  string id = 1;
  string content = 2;
  double score = 3;
  // Whether tagged by a human (i.e. ignore then score?)
  bool human = 4;
  string question = 5;
  bool generated = 6;
  // TODO: metadata about model used, version etc.
}

message User {
  /// [uid] is set by Firebase authentication
  string uid = 1;
  string email = 2;
  string display_name = 3;
  // bool emailVerified = false;
  string phone_number = 4;
  string photo_url = 5;

  /// Is the user [online]?
  bool online = 6;

  /// Google account linked?
  bool google = 7;

  /// Facebook account linked?
  bool facebook = 8;

  /// Apple account linked?
  bool apple = 9;

  /// Favourite topics the user has picked, should impact recommendations
  repeated string favourite_topics = 10;

  /// Twitter-like [tag] i.e. @steveTheApple
  string tag = 11;

  /// Device [tokens] used for Cloud Messaging
  repeated string tokens = 12;

  repeated string latest_interactions = 13;
}

/// Evaluated relationship between users using AI + heuristics
//message Interaction {
//  // Likely to be only length 2 array
//  string users = 1;
//
//  // Langame played together
//  int64 interactions = 2;
//}

enum InteractionLevel {
  BAD = 0;
  AVERAGE = 1;
  GREAT = 2;
  LOVE = 3;
}

message UserPreference {
  string user_id = 2;
  // Do I want to be recommended like-minded new people?
  bool unknown_people_recommendations = 3;
  int32 theme_index = 4;
  bool has_done_on_boarding = 5;
  // Searched user tags
  repeated string search_history = 6;
  bool shake_to_feedback = 7;
}


message ChannelUserLangameUser {
  uint32 channel_uid = 1;
  string langame_uid = 2;
}

message Langame {
  string channelName = 1;
  repeated ChannelUserLangameUser players = 2;
  repeated string topics = 3;
  repeated Question questions = 4;
}

message Paint {
  oneof action {
    SelectionRectangle selection_rectangle = 1;
    SelectionCircle selection_circle = 2;
    SelectionLine selection_line = 3;
    SelectionText selection_text = 4;
    DrawRectangle draw_rectangle = 5;
    DrawCircle draw_circle = 6;
    DrawLine draw_line = 7;
    DrawPoints draw_points = 8;
    DrawText draw_text = 9;
    Clear clear_all = 10;
    EditText edit_text = 11;
  }

  message SelectionRectangle {
    DrawShape shape_properties = 1;
    double shift_x = 2;
    double shift_y = 3;
  }

  message SelectionCircle {
    DrawShape shape_properties = 1;
    double shift_x = 2;
    double shift_y = 3;
  }

  message SelectionLine {
    DrawShape shape_properties = 1;
    bool is_p1 = 2;
    double new_x = 3;
    double new_y = 4;
  }

  message SelectionText {
    DrawShape shape_properties = 1;
    double new_x = 2;
    double new_y = 3;
  }
  
  message DrawShape {
    string id = 1;
    int32 r = 6;
    int32 g = 7;
    int32 b = 8;
    double screenWidth = 9;
    double screenHeight = 10;
  }

  message DrawRectangle {
    DrawShape shape_properties = 1;
    double bottom_left_x = 2;
    double bottom_left_y = 3;
    double top_right_x = 4;
    double top_right_y = 5;
  }

  message DrawCircle {
    DrawShape shape_properties = 1;
    double center_x = 2;
    double center_y = 3;
    double radius = 4;
  }

  message DrawLine {
    DrawShape shape_properties = 1;
    double p1_x = 2;
    double p1_y = 3;
    double p2_x = 4;
    double p2_y = 5;
  }

  message DrawPoints {
    DrawShape shape_properties = 1;
    double position_x = 4;
    double position_y = 5;
  }

  message DrawText {
    DrawShape shape_properties = 1;
    double position_x = 4;
    double position_y = 5;
  }

  message Clear {}

  message EditText {
    string id = 1;
    string text = 2;
  }

  enum Shape {
    Rectangle = 0;
    Circle = 1;
    Line = 2;
    Text = 3;
  }
}

message Notification {
  string id = 1;
  string sender_uid = 2;
  repeated string recipients_uid = 3;

  /// Topics of the Langame
  repeated string topics = 4;

  /// Agora channel name
  string channel_name = 5;

  bool ready = 6;
}

message Subscription {
  string status = 1;
}