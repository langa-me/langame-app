syntax = "proto3";
package langame.protobuf;

// Note: models ids are usually not stored in Firestore since it already use id to index them
// it is mostly used within the logic of the front-end / services

message Topic {
  string id = 1;
  string content = 2;
}

message Question {
  string id = 1;
  string content = 2;
}

message Tag {
  string id = 1;
  string content = 2;
  double score = 3;
  // Whether tagged by a human (i.e. ignore then score?)
  bool human = 4;
  string question = 5;
  bool generated = 6;
  // TODO: metadata about model used, version etc.
}

message User {
    /// [uid] is set by Firebase authentication
    string uid = 1;
    string email = 2;
    string display_name = 3;
    // bool emailVerified = false;
    string phone_number = 4;
    string photo_url = 5;

    /// Is the user [online]?
    bool online = 6;

    /// Google account linked?
    bool google = 7;

    /// Facebook account linked?
    bool facebook = 8;

    /// Apple account linked?
    bool apple = 9;

    /// Favourite topics the user has picked, should impact recommendations
    repeated string favourite_topics = 10;

    /// Twitter-like [tag] i.e. @steveTheApple
    string tag = 11;

    /// Device [tokens] used for Cloud Messaging
    repeated string tokens = 12;
}

/// Evaluated relationship between users using AI + heuristics
//message Interaction {
//  // Likely to be only length 2 array
//  string users = 1;
//
//  // Langame played together
//  int64 interactions = 2;
//}

enum InteractionLevel {
  BAD = 0;
  AVERAGE = 1;
  GREAT = 2;
  LOVE = 3;
}

// Why a message for user preferences instead of local storage? The future is the cloud bro, nothing in local
// Why another message? With scale, can't stuff everything into a message that is often used (user)
// It's ok to make a joint from time to time
message UserPreferences {
  string uid = 1;
  // Do I want to be recommended like-minded new people?
  bool unknown_people_recommendations = 2;
  // TODO: transfer every preferences from other messages here
}
