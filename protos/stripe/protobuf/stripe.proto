syntax = "proto3";

package stripeapi;

import "google/protobuf/empty.proto";

message DeleteAccountBankAccountsIdRequest {
    string id = 1;
}

message DeleteAccountExternalAccountsIdRequest {
    string id = 1;
}

message DeleteAccountPeoplePersonRequest {
    string person = 1;
}

message DeleteAccountPersonsPersonRequest {
    string person = 1;
}

message DeleteAccountsAccountBankAccountsIdRequest {
    string account = 1;
    string id = 2;
}

message DeleteAccountsAccountExternalAccountsIdRequest {
    string account = 1;
    string id = 2;
}

message DeleteAccountsAccountPeoplePersonRequest {
    string account = 1;
    string person = 2;
}

message DeleteAccountsAccountPersonsPersonRequest {
    string account = 1;
    string person = 2;
}

message DeleteAccountsAccountRequest {
    string account = 1;
}

message DeleteApplePayDomainsDomainRequest {
    string domain = 1;
}

message DeleteCouponsCouponRequest {
    string coupon = 1;
}

message DeleteCustomersCustomerBankAccountsIdRequest {
    string customer = 1;
    string id = 2;
}

message DeleteCustomersCustomerCardsIdRequest {
    string customer = 1;
    string id = 2;
}

message DeleteCustomersCustomerDiscountRequest {
    string customer = 1;
}

message DeleteCustomersCustomerRequest {
    string customer = 1;
}

message DeleteCustomersCustomerSourcesIdRequest {
    string customer = 1;
    string id = 2;
}

message DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountRequest {
    string customer = 1;
    string subscription_exposed_id = 2;
}

message DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdRequest {
    string customer = 1;
    string subscription_exposed_id = 2;
}

message DeleteCustomersCustomerTaxIdsIdRequest {
    string customer = 1;
    string id = 2;
}

message DeleteEphemeralKeysKeyRequest {
    string key = 1;
}

message DeleteInvoiceitemsInvoiceitemRequest {
    string invoiceitem = 1;
}

message DeleteInvoicesInvoiceRequest {
    string invoice = 1;
}

message DeletePlansPlanRequest {
    string plan = 1;
}

message DeleteProductsIdRequest {
    string id = 1;
}

message DeleteRadarValueListItemsItemRequest {
    string item = 1;
}

message DeleteRadarValueListsValueListRequest {
    string value_list = 1;
}

message DeleteRecipientsIdRequest {
    string id = 1;
}

message DeleteSkusIdRequest {
    string id = 1;
}

message DeleteSubscriptionItemsItemRequest {
    string item = 1;
}

message DeleteSubscriptionsSubscriptionExposedIdDiscountRequest {
    string subscription_exposed_id = 1;
}

message DeleteSubscriptionsSubscriptionExposedIdRequest {
    string subscription_exposed_id = 1;
}

message DeleteTerminalLocationsLocationRequest {
    string location = 1;
}

message DeleteTerminalReadersReaderRequest {
    string reader = 1;
}

message DeleteWebhookEndpointsWebhookEndpointRequest {
    string webhook_endpoint = 1;
}

message Get3dSecureThreeDSecureRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string three_d_secure = 2;
}

message GetAccountBankAccountsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetAccountCapabilitiesCapabilityRequest {
    string capability = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetAccountCapabilitiesRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
}

message GetAccountExternalAccountsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetAccountExternalAccountsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetAccountPeoplePersonRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string person = 2;
}

message GetAccountPeopleRequest {
    message RelationshipMessage {
        bool director = 1;
        bool executive = 2;
        bool owner = 3;
        bool representative = 4;
    }

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // Filters on the list of people returned based on the person's relationship to the account's company.
    RelationshipMessage relationship = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetAccountPersonsPersonRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string person = 2;
}

message GetAccountPersonsRequest {
    message RelationshipMessage {
        bool director = 1;
        bool executive = 2;
        bool owner = 3;
        bool representative = 4;
    }

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // Filters on the list of people returned based on the person's relationship to the account's company.
    RelationshipMessage relationship = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetAccountRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
}

message GetAccountsAccountBankAccountsIdRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetAccountsAccountCapabilitiesCapabilityRequest {
    string account = 1;
    string capability = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;
}

message GetAccountsAccountCapabilitiesRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetAccountsAccountExternalAccountsIdRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetAccountsAccountExternalAccountsRequest {
    string account = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetAccountsAccountPeoplePersonRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string person = 3;
}

message GetAccountsAccountPeopleRequest {
    message RelationshipMessage {
        bool director = 1;
        bool executive = 2;
        bool owner = 3;
        bool representative = 4;
    }

    string account = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // Filters on the list of people returned based on the person's relationship to the account's company.
    RelationshipMessage relationship = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetAccountsAccountPersonsPersonRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string person = 3;
}

message GetAccountsAccountPersonsRequest {
    message RelationshipMessage {
        bool director = 1;
        bool executive = 2;
        bool owner = 3;
        bool representative = 4;
    }

    string account = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // Filters on the list of people returned based on the person's relationship to the account's company.
    RelationshipMessage relationship = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetAccountsAccountRequest {
    string account = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetAccountsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetApplePayDomainsDomainRequest {
    string domain = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetApplePayDomainsRequest {
    string domain_name = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetApplicationFeesFeeRefundsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string fee = 2;
    string id = 3;
}

message GetApplicationFeesIdRefundsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetApplicationFeesIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetApplicationFeesRequest {
    message CreatedMessage {}

    // Only return application fees for the charge specified by this charge ID.
    string charge = 1;
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetBalanceHistoryIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetBalanceHistoryRequest {
    message AvailableOnMessage {}

    message CreatedMessage {}

    AvailableOnMessage available_on = 1;
    CreatedMessage created = 2;

    // Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    string payout = 7;

    // Only returns the original transaction.
    string source = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;

    // Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    string type = 10;
}

message GetBalanceRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
}

message GetBalanceTransactionsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetBalanceTransactionsRequest {
    message AvailableOnMessage {}

    message CreatedMessage {}

    AvailableOnMessage available_on = 1;
    CreatedMessage created = 2;

    // Only return transactions in a certain currency. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
    string currency = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // For automatic Stripe payouts only, only returns transactions that were paid out on the specified payout ID.
    string payout = 7;

    // Only returns the original transaction.
    string source = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;

    // Only returns transactions of the given type. One of: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `payment`, `payment_failure_refund`, `payment_refund`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
    string type = 10;
}

message GetBillingPortalConfigurationsConfigurationRequest {
    string configuration = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetBillingPortalConfigurationsRequest {
    // Only return configurations that are active or inactive (e.g., pass `true` to only list active configurations).
    bool active = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // Only return the default or non-default configurations (e.g., pass `true` to only list the default configuration).
    bool is_default = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetBitcoinReceiversIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetBitcoinReceiversReceiverTransactionsRequest {
    // Only return transactions for the customer specified by this customer ID.
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;
    string receiver = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetBitcoinReceiversRequest {
    // Filter for active receivers.
    bool active = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // Filter for filled receivers.
    bool filled = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;

    // Filter for receivers with uncaptured funds.
    bool uncaptured_funds = 7;
}

message GetBitcoinTransactionsRequest {
    // Only return transactions for the customer specified by this customer ID.
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;
    string receiver = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetChargesChargeDisputeRequest {
    string charge = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetChargesChargeRefundsRefundRequest {
    string charge = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string refund = 3;
}

message GetChargesChargeRefundsRequest {
    string charge = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetChargesChargeRequest {
    string charge = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetChargesRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // Only return charges for the customer specified by this customer ID.
    string customer = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return charges that were created by the PaymentIntent specified by this PaymentIntent ID.
    string payment_intent = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return charges for this transfer group.
    string transfer_group = 8;
}

message GetCheckoutSessionsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // Only return the Checkout Session for the PaymentIntent specified.
    string payment_intent = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // Only return the Checkout Session for the subscription specified.
    string subscription = 6;
}

message GetCheckoutSessionsSessionLineItemsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;
    string session = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCheckoutSessionsSessionRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string session = 2;
}

message GetCountrySpecsCountryRequest {
    string country = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetCountrySpecsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetCouponsCouponRequest {
    string coupon = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetCouponsRequest {
    message CreatedMessage {}

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCreditNotesCreditNoteLinesRequest {
    string credit_note = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCreditNotesIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetCreditNotesPreviewLinesRequest {
    enum GetCreditNotesPreviewLinesRequestReason {
        GET_CREDIT_NOTES_PREVIEW_LINES_REQUEST_REASON_DUPLICATE = 0;
        GET_CREDIT_NOTES_PREVIEW_LINES_REQUEST_REASON_FRAUDULENT = 1;
        GET_CREDIT_NOTES_PREVIEW_LINES_REQUEST_REASON_ORDER_CHANGE = 2;
        GET_CREDIT_NOTES_PREVIEW_LINES_REQUEST_REASON_PRODUCT_UNSATISFACTORY = 3;
    }

    message LinesMessage {
        enum LinesMessageType {
            LINES_MESSAGE_TYPE_CUSTOM_LINE_ITEM = 0;
            LINES_MESSAGE_TYPE_INVOICE_LINE_ITEM = 1;
        }

        message TaxRatesMessage {}

        int32 amount = 1;
        string description = 2;
        string invoice_line_item = 3;
        int32 quantity = 4;
        TaxRatesMessage tax_rates = 5;
        LinesMessageType type = 6;
        int32 unit_amount = 7;
        string unit_amount_decimal = 8;
    }

    // The integer amount in %s representing the total amount of the credit note.
    int32 amount = 1;

    // The integer amount in %s representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int32 credit_amount = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // ID of the invoice.
    string invoice = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // Line items that make up the credit note.
    repeated LinesMessage lines = 7;

    // The credit note's memo appears on the credit note PDF.
    string memo = 8;

    // Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    map<string, string> metadata = 9;

    // The integer amount in %s representing the amount that is credited outside of Stripe.
    int32 out_of_band_amount = 10;

    // Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    GetCreditNotesPreviewLinesRequestReason reason = 11;

    // ID of an existing refund to link this credit note to.
    string refund = 12;

    // The integer amount in %s representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int32 refund_amount = 13;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 14;
}

message GetCreditNotesPreviewRequest {
    enum GetCreditNotesPreviewRequestReason {
        GET_CREDIT_NOTES_PREVIEW_REQUEST_REASON_DUPLICATE = 0;
        GET_CREDIT_NOTES_PREVIEW_REQUEST_REASON_FRAUDULENT = 1;
        GET_CREDIT_NOTES_PREVIEW_REQUEST_REASON_ORDER_CHANGE = 2;
        GET_CREDIT_NOTES_PREVIEW_REQUEST_REASON_PRODUCT_UNSATISFACTORY = 3;
    }

    message LinesMessage {
        enum LinesMessageType {
            LINES_MESSAGE_TYPE_CUSTOM_LINE_ITEM = 0;
            LINES_MESSAGE_TYPE_INVOICE_LINE_ITEM = 1;
        }

        message TaxRatesMessage {}

        int32 amount = 1;
        string description = 2;
        string invoice_line_item = 3;
        int32 quantity = 4;
        TaxRatesMessage tax_rates = 5;
        LinesMessageType type = 6;
        int32 unit_amount = 7;
        string unit_amount_decimal = 8;
    }

    // The integer amount in %s representing the total amount of the credit note.
    int32 amount = 1;

    // The integer amount in %s representing the amount to credit the customer's balance, which will be automatically applied to their next invoice.
    int32 credit_amount = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // ID of the invoice.
    string invoice = 4;

    // Line items that make up the credit note.
    repeated LinesMessage lines = 5;

    // The credit note's memo appears on the credit note PDF.
    string memo = 6;

    // Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
    map<string, string> metadata = 7;

    // The integer amount in %s representing the amount that is credited outside of Stripe.
    int32 out_of_band_amount = 8;

    // Reason for issuing this credit note, one of `duplicate`, `fraudulent`, `order_change`, or `product_unsatisfactory`
    GetCreditNotesPreviewRequestReason reason = 9;

    // ID of an existing refund to link this credit note to.
    string refund = 10;

    // The integer amount in %s representing the amount to refund. If set, a refund will be created for the charge associated with the invoice.
    int32 refund_amount = 11;
}

message GetCreditNotesRequest {
    // Only return credit notes for the customer specified by this customer ID.
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // Only return credit notes for the invoice specified by this invoice ID.
    string invoice = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetCustomersCustomerBalanceTransactionsRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCustomersCustomerBalanceTransactionsTransactionRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string transaction = 3;
}

message GetCustomersCustomerBankAccountsIdRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetCustomersCustomerBankAccountsRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCustomersCustomerCardsIdRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetCustomersCustomerCardsRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCustomersCustomerDiscountRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetCustomersCustomerRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetCustomersCustomerSourcesIdRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetCustomersCustomerSourcesRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // Filter sources according to a particular object type.
    string object = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetCustomersCustomerSubscriptionsRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string subscription_exposed_id = 3;
}

message GetCustomersCustomerSubscriptionsSubscriptionExposedIdRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string subscription_exposed_id = 3;
}

message GetCustomersCustomerTaxIdsIdRequest {
    string customer = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;
}

message GetCustomersCustomerTaxIdsRequest {
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetCustomersRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A case-sensitive filter on the list based on the customer's `email` field. The value must be a string.
    string email = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetDisputesDisputeRequest {
    string dispute = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetDisputesRequest {
    message CreatedMessage {}

    // Only return disputes associated to the charge specified by this charge ID.
    string charge = 1;
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return disputes associated to the PaymentIntent specified by this PaymentIntent ID.
    string payment_intent = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetEventsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetEventsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // Filter events by whether all webhooks were successfully delivered. If false, events which are still pending or have failed all delivery attempts to a webhook endpoint will be returned.
    bool delivery_success = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;

    // A string containing a specific event name, or group of events using * as a wildcard. The list will be filtered to include only events with a matching event property.
    string type = 7;

    // An array of up to 20 strings containing specific event names. The list will be filtered to include only events with a matching event property. You may pass either `type` or `types`, but not both.
    repeated string types = 8;
}

message GetExchangeRatesRateIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string rate_id = 2;
}

message GetExchangeRatesRequest {
    // A cursor for use in pagination. `ending_before` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with the exchange rate for currency X your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and total number of supported payout currencies, and the default is the max.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is the currency that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with the exchange rate for currency X, your subsequent call can include `starting_after=X` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetFileLinksLinkRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string link = 2;
}

message GetFileLinksRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // Filter links by their expiration status. By default, all links are returned.
    bool expired = 4;

    // Only return links for the given file.
    string file = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetFilesFileRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string file = 2;
}

message GetFilesRequest {
    enum GetFilesRequestPurpose {
        GET_FILES_REQUEST_PURPOSE_ACCOUNT_REQUIREMENT = 0;
        GET_FILES_REQUEST_PURPOSE_ADDITIONAL_VERIFICATION = 1;
        GET_FILES_REQUEST_PURPOSE_BUSINESS_ICON = 2;
        GET_FILES_REQUEST_PURPOSE_BUSINESS_LOGO = 3;
        GET_FILES_REQUEST_PURPOSE_CUSTOMER_SIGNATURE = 4;
        GET_FILES_REQUEST_PURPOSE_DISPUTE_EVIDENCE = 5;
        GET_FILES_REQUEST_PURPOSE_DOCUMENT_PROVIDER_IDENTITY_DOCUMENT = 6;
        GET_FILES_REQUEST_PURPOSE_FINANCE_REPORT_RUN = 7;
        GET_FILES_REQUEST_PURPOSE_IDENTITY_DOCUMENT = 8;
        GET_FILES_REQUEST_PURPOSE_IDENTITY_DOCUMENT_DOWNLOADABLE = 9;
        GET_FILES_REQUEST_PURPOSE_PCI_DOCUMENT = 10;
        GET_FILES_REQUEST_PURPOSE_SELFIE = 11;
        GET_FILES_REQUEST_PURPOSE_SIGMA_SCHEDULED_QUERY = 12;
        GET_FILES_REQUEST_PURPOSE_TAX_DOCUMENT_USER_UPLOAD = 13;
    }

    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // The file purpose to filter queries by. If none is provided, files will not be filtered by purpose.
    GetFilesRequestPurpose purpose = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetIdentityVerificationReportsReportRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string report = 2;
}

message GetIdentityVerificationReportsRequest {
    enum GetIdentityVerificationReportsRequestType {
        GET_IDENTITY_VERIFICATION_REPORTS_REQUEST_TYPE_DOCUMENT = 0;
        GET_IDENTITY_VERIFICATION_REPORTS_REQUEST_TYPE_ID_NUMBER = 1;
    }

    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // Only return VerificationReports of this type
    GetIdentityVerificationReportsRequestType type = 6;

    // Only return VerificationReports created by this VerificationSession ID. It is allowed to provide a VerificationIntent ID.
    string verification_session = 7;
}

message GetIdentityVerificationSessionsRequest {
    enum GetIdentityVerificationSessionsRequestStatus {
        GET_IDENTITY_VERIFICATION_SESSIONS_REQUEST_STATUS_CANCELED = 0;
        GET_IDENTITY_VERIFICATION_SESSIONS_REQUEST_STATUS_PROCESSING = 1;
        GET_IDENTITY_VERIFICATION_SESSIONS_REQUEST_STATUS_REQUIRES_INPUT = 2;
        GET_IDENTITY_VERIFICATION_SESSIONS_REQUEST_STATUS_VERIFIED = 3;
    }

    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // Only return VerificationSessions with this status.
    GetIdentityVerificationSessionsRequestStatus status = 6;
}

message GetIdentityVerificationSessionsSessionRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string session = 2;
}

message GetInvoiceitemsInvoiceitemRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string invoiceitem = 2;
}

message GetInvoiceitemsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // The identifier of the customer whose invoice items to return. If none is provided, all invoice items will be returned.
    string customer = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // Only return invoice items belonging to this invoice. If none is provided, all invoice items will be returned. If specifying an invoice, no customer identifier is needed.
    string invoice = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // Set to `true` to only show pending invoice items, which are not yet attached to any invoices. Set to `false` to only show invoice items already attached to invoices. If unspecified, no filter is applied.
    bool pending = 7;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 8;
}

message GetInvoicesInvoiceLinesRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string invoice = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetInvoicesInvoiceRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string invoice = 2;
}

message GetInvoicesRequest {
    enum GetInvoicesRequestCollectionMethod {
        GET_INVOICES_REQUEST_COLLECTION_METHOD_CHARGE_AUTOMATICALLY = 0;
        GET_INVOICES_REQUEST_COLLECTION_METHOD_SEND_INVOICE = 1;
    }

    enum GetInvoicesRequestStatus {
        GET_INVOICES_REQUEST_STATUS_DRAFT = 0;
        GET_INVOICES_REQUEST_STATUS_OPEN = 1;
        GET_INVOICES_REQUEST_STATUS_PAID = 2;
        GET_INVOICES_REQUEST_STATUS_UNCOLLECTIBLE = 3;
        GET_INVOICES_REQUEST_STATUS_VOID = 4;
    }

    message CreatedMessage {}

    message DueDateMessage {}

    // The collection method of the invoice to retrieve. Either `charge_automatically` or `send_invoice`.
    GetInvoicesRequestCollectionMethod collection_method = 1;
    CreatedMessage created = 2;

    // Only return invoices for the customer specified by this customer ID.
    string customer = 3;
    DueDateMessage due_date = 4;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 5;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 6;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 7;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 8;

    // The status of the invoice, one of `draft`, `open`, `paid`, `uncollectible`, or `void`. [Learn more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
    GetInvoicesRequestStatus status = 9;

    // Only return invoices for the subscription specified by this subscription ID.
    string subscription = 10;
}

message GetInvoicesUpcomingLinesRequest {
    enum GetInvoicesUpcomingLinesRequestSubscriptionProrationBehavior {
        GET_INVOICES_UPCOMING_LINES_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_ALWAYS_INVOICE = 0;
        GET_INVOICES_UPCOMING_LINES_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_CREATE_PRORATIONS = 1;
        GET_INVOICES_UPCOMING_LINES_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_NONE = 2;
    }

    message DiscountsMessage {}

    message InvoiceItemsMessage {
        message DiscountsMessage {}

        message MetadataMessage {}

        message PeriodMessage {
            int32 end = 1;
            int32 start = 2;
        }

        message PriceDataMessage {
            string currency = 1;
            string product = 2;
            int32 unit_amount = 3;
            string unit_amount_decimal = 4;
        }

        message TaxRatesMessage {}

        int32 amount = 1;
        string currency = 2;
        string description = 3;
        bool discountable = 4;
        DiscountsMessage discounts = 5;
        string invoiceitem = 6;
        MetadataMessage metadata = 7;
        PeriodMessage period = 8;
        string price = 9;
        PriceDataMessage price_data = 10;
        int32 quantity = 11;
        TaxRatesMessage tax_rates = 12;
        int32 unit_amount = 13;
        string unit_amount_decimal = 14;
    }

    message SubscriptionBillingCycleAnchorMessage {}

    message SubscriptionCancelAtMessage {}

    message SubscriptionDefaultTaxRatesMessage {}

    message SubscriptionItemsMessage {
        message BillingThresholdsMessage {}

        message MetadataMessage {}

        message PriceDataMessage {
            message RecurringMessage {
                enum RecurringMessageInterval {
                    RECURRING_MESSAGE_INTERVAL_DAY = 0;
                    RECURRING_MESSAGE_INTERVAL_MONTH = 1;
                    RECURRING_MESSAGE_INTERVAL_WEEK = 2;
                    RECURRING_MESSAGE_INTERVAL_YEAR = 3;
                }

                RecurringMessageInterval interval = 1;
                int32 interval_count = 2;
            }

            string currency = 1;
            string product = 2;
            RecurringMessage recurring = 3;
            int32 unit_amount = 4;
            string unit_amount_decimal = 5;
        }

        message TaxRatesMessage {}

        BillingThresholdsMessage billing_thresholds = 1;
        bool clear_usage = 2;
        bool deleted = 3;
        string id = 4;
        MetadataMessage metadata = 5;
        string price = 6;
        PriceDataMessage price_data = 7;
        int32 quantity = 8;
        TaxRatesMessage tax_rates = 9;
    }

    message SubscriptionTrialEndMessage {}

    // The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.
    string coupon = 1;

    // The identifier of the customer whose upcoming invoice you'd like to retrieve.
    string customer = 2;

    // The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead.
    DiscountsMessage discounts = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // List of invoice items to add or update in the upcoming invoice preview.
    repeated InvoiceItemsMessage invoice_items = 6;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 7;

    // The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    string schedule = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;

    // The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    string subscription = 10;

    // For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`.
    SubscriptionBillingCycleAnchorMessage subscription_billing_cycle_anchor = 11;

    // Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`.
    SubscriptionCancelAtMessage subscription_cancel_at = 12;

    // Boolean indicating whether this subscription should cancel at the end of the current period.
    bool subscription_cancel_at_period_end = 13;

    // This simulates the subscription being canceled or expired immediately.
    bool subscription_cancel_now = 14;

    // If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set.
    SubscriptionDefaultTaxRatesMessage subscription_default_tax_rates = 15;

    // A list of up to 20 subscription items, each with an attached price.
    repeated SubscriptionItemsMessage subscription_items = 16;

    // Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. Valid values are `create_prorations`, `none`, or `always_invoice`.
    // 
    // Passing `create_prorations` will cause proration invoice items to be created when applicable. These proration items will only be invoiced immediately under [certain conditions](https://stripe.com/docs/subscriptions/upgrading-downgrading#immediate-payment). In order to always invoice immediately for prorations, pass `always_invoice`.
    // 
    // Prorations can be disabled by passing `none`.
    GetInvoicesUpcomingLinesRequestSubscriptionProrationBehavior subscription_proration_behavior = 17;

    // If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'.
    int32 subscription_proration_date = 18;

    // Date a subscription is intended to start (can be future or past)
    int32 subscription_start_date = 19;

    // If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required.
    SubscriptionTrialEndMessage subscription_trial_end = 20;

    // Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed.
    bool subscription_trial_from_plan = 21;
}

message GetInvoicesUpcomingRequest {
    enum GetInvoicesUpcomingRequestSubscriptionProrationBehavior {
        GET_INVOICES_UPCOMING_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_ALWAYS_INVOICE = 0;
        GET_INVOICES_UPCOMING_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_CREATE_PRORATIONS = 1;
        GET_INVOICES_UPCOMING_REQUEST_SUBSCRIPTION_PRORATION_BEHAVIOR_NONE = 2;
    }

    message DiscountsMessage {}

    message InvoiceItemsMessage {
        message DiscountsMessage {}

        message MetadataMessage {}

        message PeriodMessage {
            int32 end = 1;
            int32 start = 2;
        }

        message PriceDataMessage {
            string currency = 1;
            string product = 2;
            int32 unit_amount = 3;
            string unit_amount_decimal = 4;
        }

        message TaxRatesMessage {}

        int32 amount = 1;
        string currency = 2;
        string description = 3;
        bool discountable = 4;
        DiscountsMessage discounts = 5;
        string invoiceitem = 6;
        MetadataMessage metadata = 7;
        PeriodMessage period = 8;
        string price = 9;
        PriceDataMessage price_data = 10;
        int32 quantity = 11;
        TaxRatesMessage tax_rates = 12;
        int32 unit_amount = 13;
        string unit_amount_decimal = 14;
    }

    message SubscriptionBillingCycleAnchorMessage {}

    message SubscriptionCancelAtMessage {}

    message SubscriptionDefaultTaxRatesMessage {}

    message SubscriptionItemsMessage {
        message BillingThresholdsMessage {}

        message MetadataMessage {}

        message PriceDataMessage {
            message RecurringMessage {
                enum RecurringMessageInterval {
                    RECURRING_MESSAGE_INTERVAL_DAY = 0;
                    RECURRING_MESSAGE_INTERVAL_MONTH = 1;
                    RECURRING_MESSAGE_INTERVAL_WEEK = 2;
                    RECURRING_MESSAGE_INTERVAL_YEAR = 3;
                }

                RecurringMessageInterval interval = 1;
                int32 interval_count = 2;
            }

            string currency = 1;
            string product = 2;
            RecurringMessage recurring = 3;
            int32 unit_amount = 4;
            string unit_amount_decimal = 5;
        }

        message TaxRatesMessage {}

        BillingThresholdsMessage billing_thresholds = 1;
        bool clear_usage = 2;
        bool deleted = 3;
        string id = 4;
        MetadataMessage metadata = 5;
        string price = 6;
        PriceDataMessage price_data = 7;
        int32 quantity = 8;
        TaxRatesMessage tax_rates = 9;
    }

    message SubscriptionTrialEndMessage {}

    // The code of the coupon to apply. If `subscription` or `subscription_items` is provided, the invoice returned will preview updating or creating a subscription with that coupon. Otherwise, it will preview applying that coupon to the customer for the next upcoming invoice from among the customer's subscriptions. The invoice can be previewed without a coupon by passing this value as an empty string.
    string coupon = 1;

    // The identifier of the customer whose upcoming invoice you'd like to retrieve.
    string customer = 2;

    // The coupons to redeem into discounts for the invoice preview. If not specified, inherits the discount from the customer or subscription. Pass an empty string to avoid inheriting any discounts. To preview the upcoming invoice for a subscription that hasn't been created, use `coupon` instead.
    DiscountsMessage discounts = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // List of invoice items to add or update in the upcoming invoice preview.
    repeated InvoiceItemsMessage invoice_items = 5;

    // The identifier of the unstarted schedule whose upcoming invoice you'd like to retrieve. Cannot be used with subscription or subscription fields.
    string schedule = 6;

    // The identifier of the subscription for which you'd like to retrieve the upcoming invoice. If not provided, but a `subscription_items` is provided, you will preview creating a subscription with those items. If neither `subscription` nor `subscription_items` is provided, you will retrieve the next upcoming invoice from among the customer's subscriptions.
    string subscription = 7;

    // For new subscriptions, a future timestamp to anchor the subscription's [billing cycle](https://stripe.com/docs/subscriptions/billing-cycle). This is used to determine the date of the first full invoice, and, for plans with `month` or `year` intervals, the day of the month for subsequent invoices. For existing subscriptions, the value can only be set to `now` or `unchanged`.
    SubscriptionBillingCycleAnchorMessage subscription_billing_cycle_anchor = 8;

    // Timestamp indicating when the subscription should be scheduled to cancel. Will prorate if within the current period and prorations have been enabled using `proration_behavior`.
    SubscriptionCancelAtMessage subscription_cancel_at = 9;

    // Boolean indicating whether this subscription should cancel at the end of the current period.
    bool subscription_cancel_at_period_end = 10;

    // This simulates the subscription being canceled or expired immediately.
    bool subscription_cancel_now = 11;

    // If provided, the invoice returned will preview updating or creating a subscription with these default tax rates. The default tax rates will apply to any line item that does not have `tax_rates` set.
    SubscriptionDefaultTaxRatesMessage subscription_default_tax_rates = 12;

    // A list of up to 20 subscription items, each with an attached price.
    repeated SubscriptionItemsMessage subscription_items = 13;

    // Determines how to handle [prorations](https://stripe.com/docs/subscriptions/billing-cycle#prorations) when the billing cycle changes (e.g., when switching plans, resetting `billing_cycle_anchor=now`, or starting a trial), or if an item's `quantity` changes. Valid values are `create_prorations`, `none`, or `always_invoice`.
    // 
    // Passing `create_prorations` will cause proration invoice items to be created when applicable. These proration items will only be invoiced immediately under [certain conditions](https://stripe.com/docs/subscriptions/upgrading-downgrading#immediate-payment). In order to always invoice immediately for prorations, pass `always_invoice`.
    // 
    // Prorations can be disabled by passing `none`.
    GetInvoicesUpcomingRequestSubscriptionProrationBehavior subscription_proration_behavior = 14;

    // If previewing an update to a subscription, and doing proration, `subscription_proration_date` forces the proration to be calculated as though the update was done at the specified time. The time given must be within the current subscription period, and cannot be before the subscription was on its current plan. If set, `subscription`, and one of `subscription_items`, or `subscription_trial_end` are required. Also, `subscription_proration_behavior` cannot be set to 'none'.
    int32 subscription_proration_date = 15;

    // Date a subscription is intended to start (can be future or past)
    int32 subscription_start_date = 16;

    // If provided, the invoice returned will preview updating or creating a subscription with that trial end. If set, one of `subscription_items` or `subscription` is required.
    SubscriptionTrialEndMessage subscription_trial_end = 17;

    // Indicates if a plan's `trial_period_days` should be applied to the subscription. Setting `subscription_trial_end` per subscription is preferred, and this defaults to `false`. Setting this flag to `true` together with `subscription_trial_end` is not allowed.
    bool subscription_trial_from_plan = 18;
}

message GetIssuerFraudRecordsIssuerFraudRecordRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string issuer_fraud_record = 2;
}

message GetIssuerFraudRecordsRequest {
    // Only return issuer fraud records for the charge specified by this charge ID.
    string charge = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetIssuingAuthorizationsAuthorizationRequest {
    string authorization = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetIssuingAuthorizationsRequest {
    enum GetIssuingAuthorizationsRequestStatus {
        GET_ISSUING_AUTHORIZATIONS_REQUEST_STATUS_CLOSED = 0;
        GET_ISSUING_AUTHORIZATIONS_REQUEST_STATUS_PENDING = 1;
        GET_ISSUING_AUTHORIZATIONS_REQUEST_STATUS_REVERSED = 2;
    }

    message CreatedMessage {}

    // Only return authorizations that belong to the given card.
    string card = 1;

    // Only return authorizations that belong to the given cardholder.
    string cardholder = 2;

    // Only return authorizations that were created during the given date interval.
    CreatedMessage created = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`.
    GetIssuingAuthorizationsRequestStatus status = 8;
}

message GetIssuingCardholdersCardholderRequest {
    string cardholder = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetIssuingCardholdersRequest {
    enum GetIssuingCardholdersRequestStatus {
        GET_ISSUING_CARDHOLDERS_REQUEST_STATUS_ACTIVE = 0;
        GET_ISSUING_CARDHOLDERS_REQUEST_STATUS_BLOCKED = 1;
        GET_ISSUING_CARDHOLDERS_REQUEST_STATUS_INACTIVE = 2;
    }

    enum GetIssuingCardholdersRequestType {
        GET_ISSUING_CARDHOLDERS_REQUEST_TYPE_COMPANY = 0;
        GET_ISSUING_CARDHOLDERS_REQUEST_TYPE_INDIVIDUAL = 1;
    }

    message CreatedMessage {}

    // Only return cardholders that were created during the given date interval.
    CreatedMessage created = 1;

    // Only return cardholders that have the given email address.
    string email = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return cardholders that have the given phone number.
    string phone_number = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return cardholders that have the given status. One of `active`, `inactive`, or `blocked`.
    GetIssuingCardholdersRequestStatus status = 8;

    // Only return cardholders that have the given type. One of `individual` or `company`.
    GetIssuingCardholdersRequestType type = 9;
}

message GetIssuingCardsCardRequest {
    string card = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetIssuingCardsRequest {
    enum GetIssuingCardsRequestStatus {
        GET_ISSUING_CARDS_REQUEST_STATUS_ACTIVE = 0;
        GET_ISSUING_CARDS_REQUEST_STATUS_CANCELED = 1;
        GET_ISSUING_CARDS_REQUEST_STATUS_INACTIVE = 2;
    }

    enum GetIssuingCardsRequestType {
        GET_ISSUING_CARDS_REQUEST_TYPE_PHYSICAL = 0;
        GET_ISSUING_CARDS_REQUEST_TYPE_VIRTUAL = 1;
    }

    message CreatedMessage {}

    // Only return cards belonging to the Cardholder with the provided ID.
    string cardholder = 1;

    // Only return cards that were issued during the given date interval.
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Only return cards that have the given expiration month.
    int32 exp_month = 4;

    // Only return cards that have the given expiration year.
    int32 exp_year = 5;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 6;

    // Only return cards that have the given last four digits.
    string last4 = 7;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;

    // Only return cards that have the given status. One of `active`, `inactive`, or `canceled`.
    GetIssuingCardsRequestStatus status = 10;

    // Only return cards that have the given type. One of `virtual` or `physical`.
    GetIssuingCardsRequestType type = 11;
}

message GetIssuingDisputesDisputeRequest {
    string dispute = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetIssuingDisputesRequest {
    enum GetIssuingDisputesRequestStatus {
        GET_ISSUING_DISPUTES_REQUEST_STATUS_EXPIRED = 0;
        GET_ISSUING_DISPUTES_REQUEST_STATUS_LOST = 1;
        GET_ISSUING_DISPUTES_REQUEST_STATUS_SUBMITTED = 2;
        GET_ISSUING_DISPUTES_REQUEST_STATUS_UNSUBMITTED = 3;
        GET_ISSUING_DISPUTES_REQUEST_STATUS_WON = 4;
    }

    message CreatedMessage {}

    // Select Issuing disputes that were created during the given date interval.
    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // Select Issuing disputes with the given status.
    GetIssuingDisputesRequestStatus status = 6;

    // Select the Issuing dispute for the given transaction.
    string transaction = 7;
}

message GetIssuingSettlementsRequest {
    message CreatedMessage {}

    // Only return issuing settlements that were created during the given date interval.
    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetIssuingSettlementsSettlementRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string settlement = 2;
}

message GetIssuingTransactionsRequest {
    enum GetIssuingTransactionsRequestType {
        GET_ISSUING_TRANSACTIONS_REQUEST_TYPE_CAPTURE = 0;
        GET_ISSUING_TRANSACTIONS_REQUEST_TYPE_REFUND = 1;
    }

    message CreatedMessage {}

    // Only return transactions that belong to the given card.
    string card = 1;

    // Only return transactions that belong to the given cardholder.
    string cardholder = 2;

    // Only return transactions that were created during the given date interval.
    CreatedMessage created = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return transactions that have the given type. One of `capture` or `refund`.
    GetIssuingTransactionsRequestType type = 8;
}

message GetIssuingTransactionsTransactionRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string transaction = 2;
}

message GetMandatesMandateRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string mandate = 2;
}

message GetOrderReturnsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetOrderReturnsRequest {
    message CreatedMessage {}

    // Date this return was created.
    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // The order to retrieve returns for.
    string order = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetOrdersIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetOrdersRequest {
    message CreatedMessage {}

    message StatusTransitionsMessage {
        message CanceledMessage {}

        message FulfilledMessage {}

        message PaidMessage {}

        message ReturnedMessage {}

        CanceledMessage canceled = 1;
        FulfilledMessage fulfilled = 2;
        PaidMessage paid = 3;
        ReturnedMessage returned = 4;
    }

    // Date this order was created.
    CreatedMessage created = 1;

    // Only return orders for the given customer.
    string customer = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // Only return orders with the given IDs.
    repeated string ids = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return orders that have the given status. One of `created`, `paid`, `fulfilled`, or `refunded`.
    string status = 8;

    // Filter orders based on when they were paid, fulfilled, canceled, or returned.
    StatusTransitionsMessage status_transitions = 9;

    // Only return orders with the given upstream order IDs.
    repeated string upstream_ids = 10;
}

message GetPaymentIntentsIntentRequest {
    // The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source.
    string client_secret = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string intent = 3;
}

message GetPaymentIntentsRequest {
    message CreatedMessage {}

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 1;

    // Only return PaymentIntents for the customer specified by this customer ID.
    string customer = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetPaymentMethodsPaymentMethodRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string payment_method = 2;
}

message GetPaymentMethodsRequest {
    enum GetPaymentMethodsRequestType {
        GET_PAYMENT_METHODS_REQUEST_TYPE_ACSS_DEBIT = 0;
        GET_PAYMENT_METHODS_REQUEST_TYPE_AFTERPAY_CLEARPAY = 1;
        GET_PAYMENT_METHODS_REQUEST_TYPE_ALIPAY = 2;
        GET_PAYMENT_METHODS_REQUEST_TYPE_AU_BECS_DEBIT = 3;
        GET_PAYMENT_METHODS_REQUEST_TYPE_BACS_DEBIT = 4;
        GET_PAYMENT_METHODS_REQUEST_TYPE_BANCONTACT = 5;
        GET_PAYMENT_METHODS_REQUEST_TYPE_CARD = 6;
        GET_PAYMENT_METHODS_REQUEST_TYPE_EPS = 7;
        GET_PAYMENT_METHODS_REQUEST_TYPE_FPX = 8;
        GET_PAYMENT_METHODS_REQUEST_TYPE_GIROPAY = 9;
        GET_PAYMENT_METHODS_REQUEST_TYPE_GRABPAY = 10;
        GET_PAYMENT_METHODS_REQUEST_TYPE_IDEAL = 11;
        GET_PAYMENT_METHODS_REQUEST_TYPE_OXXO = 12;
        GET_PAYMENT_METHODS_REQUEST_TYPE_P24 = 13;
        GET_PAYMENT_METHODS_REQUEST_TYPE_SEPA_DEBIT = 14;
        GET_PAYMENT_METHODS_REQUEST_TYPE_SOFORT = 15;
    }

    // The ID of the customer whose PaymentMethods will be retrieved.
    string customer = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // A required filter on the list, based on the object `type` field.
    GetPaymentMethodsRequestType type = 6;
}

message GetPayoutsPayoutRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string payout = 2;
}

message GetPayoutsRequest {
    message ArrivalDateMessage {}

    message CreatedMessage {}

    ArrivalDateMessage arrival_date = 1;
    CreatedMessage created = 2;

    // The ID of an external account - only return payouts sent to this external account.
    string destination = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;

    // Only return payouts that have the given status: `pending`, `paid`, `failed`, or `canceled`.
    string status = 8;
}

message GetPlansPlanRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string plan = 2;
}

message GetPlansRequest {
    message CreatedMessage {}

    // Only return plans that are active or inactive (e.g., pass `false` to list all inactive plans).
    bool active = 1;

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return plans for the given product.
    string product = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetPricesPriceRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string price = 2;
}

message GetPricesRequest {
    enum GetPricesRequestType {
        GET_PRICES_REQUEST_TYPE_ONE_TIME = 0;
        GET_PRICES_REQUEST_TYPE_RECURRING = 1;
    }

    message CreatedMessage {}

    message RecurringMessage {
        enum RecurringMessageInterval {
            RECURRING_MESSAGE_INTERVAL_DAY = 0;
            RECURRING_MESSAGE_INTERVAL_MONTH = 1;
            RECURRING_MESSAGE_INTERVAL_WEEK = 2;
            RECURRING_MESSAGE_INTERVAL_YEAR = 3;
        }

        enum RecurringMessageUsageType {
            RECURRING_MESSAGE_USAGE_TYPE_LICENSED = 0;
            RECURRING_MESSAGE_USAGE_TYPE_METERED = 1;
        }

        RecurringMessageInterval interval = 1;
        RecurringMessageUsageType usage_type = 2;
    }

    // Only return prices that are active or inactive (e.g., pass `false` to list all inactive prices).
    bool active = 1;

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 2;

    // Only return prices for the given currency.
    string currency = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // Only return the price with these lookup_keys, if any exist.
    repeated string lookup_keys = 7;

    // Only return prices for the given product.
    string product = 8;

    // Only return prices with these recurring fields.
    RecurringMessage recurring = 9;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 10;

    // Only return prices of type `recurring` or `one_time`.
    GetPricesRequestType type = 11;
}

message GetProductsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetProductsRequest {
    message CreatedMessage {}

    // Only return products that are active or inactive (e.g., pass `false` to list all inactive products).
    bool active = 1;

    // Only return products that were created during the given date interval.
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // Only return products with the given IDs.
    repeated string ids = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // Only return products that can be shipped (i.e., physical, not digital products).
    bool shippable = 7;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 8;

    // Only return products with the given url.
    string url = 9;
}

message GetPromotionCodesPromotionCodeRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string promotion_code = 2;
}

message GetPromotionCodesRequest {
    message CreatedMessage {}

    // Filter promotion codes by whether they are active.
    bool active = 1;

    // Only return promotion codes that have this case-insensitive code.
    string code = 2;

    // Only return promotion codes for this coupon.
    string coupon = 3;

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 4;

    // Only return promotion codes that are restricted to this customer.
    string customer = 5;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 6;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 7;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;
}

message GetRadarEarlyFraudWarningsEarlyFraudWarningRequest {
    string early_fraud_warning = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
}

message GetRadarEarlyFraudWarningsRequest {
    // Only return early fraud warnings for the charge specified by this charge ID.
    string charge = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // Only return early fraud warnings for charges that were created by the PaymentIntent specified by this PaymentIntent ID.
    string payment_intent = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetRadarValueListItemsItemRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string item = 2;
}

message GetRadarValueListItemsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;

    // Return items belonging to the parent list whose value matches the specified value (using an "is like" match).
    string value = 6;

    // Identifier for the parent value list this item belongs to.
    string value_list = 7;
}

message GetRadarValueListsRequest {
    message CreatedMessage {}

    // The alias used to reference the value list when writing rules.
    string alias = 1;

    // A value contained within a value list - returns all value lists containing this value.
    string contains = 2;
    CreatedMessage created = 3;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 4;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetRadarValueListsValueListRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string value_list = 2;
}

message GetRecipientsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetRecipientsRequest {
    enum GetRecipientsRequestType {
        GET_RECIPIENTS_REQUEST_TYPE_CORPORATION = 0;
        GET_RECIPIENTS_REQUEST_TYPE_INDIVIDUAL = 1;
    }

    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
    GetRecipientsRequestType type = 6;

    // Only return recipients that are verified or unverified.
    bool verified = 7;
}

message GetRefundsRefundRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string refund = 2;
}

message GetRefundsRequest {
    message CreatedMessage {}

    // Only return refunds for the charge specified by this charge ID.
    string charge = 1;
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return refunds for the PaymentIntent specified by this ID.
    string payment_intent = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetReportingReportRunsReportRunRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string report_run = 2;
}

message GetReportingReportRunsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetReportingReportTypesReportTypeRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string report_type = 2;
}

message GetReportingReportTypesRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
}

message GetReviewsRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetReviewsReviewRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string review = 2;
}

message GetSetupAttemptsRequest {
    message CreatedMessage {}

    // A filter on the list, based on the object `created` field. The value
    // can be a string with an integer Unix timestamp, or it can be a
    // dictionary with a number of different query options.
    CreatedMessage created = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // Only return SetupAttempts created by the SetupIntent specified by
    // this ID.
    string setup_intent = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;
}

message GetSetupIntentsIntentRequest {
    // The client secret of the SetupIntent. Required if a publishable key is used to retrieve the SetupIntent.
    string client_secret = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string intent = 3;
}

message GetSetupIntentsRequest {
    message CreatedMessage {}

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 1;

    // Only return SetupIntents for the customer specified by this customer ID.
    string customer = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // Only return SetupIntents associated with the specified payment method.
    string payment_method = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetSigmaScheduledQueryRunsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetSigmaScheduledQueryRunsScheduledQueryRunRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string scheduled_query_run = 2;
}

message GetSkusIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
}

message GetSkusRequest {
    // Only return SKUs that are active or inactive (e.g., pass `false` to list all inactive products).
    bool active = 1;

    // Only return SKUs that have the specified key-value pairs in this partially constructed dictionary. Can be specified only if `product` is also supplied. For instance, if the associated product has attributes `["color", "size"]`, passing in `attributes[color]=red` returns all the SKUs for this product that have `color` set to `red`.
    map<string, string> attributes = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // Only return SKUs with the given IDs.
    repeated string ids = 5;

    // Only return SKUs that are either in stock or out of stock (e.g., pass `false` to list all SKUs that are out of stock). If no value is provided, all SKUs are returned.
    bool in_stock = 6;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 7;

    // The ID of the product whose SKUs will be retrieved. Must be a product with type `good`.
    string product = 8;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 9;
}

message GetSourcesSourceMandateNotificationsMandateNotificationRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string mandate_notification = 2;
    string source = 3;
}

message GetSourcesSourceRequest {
    // The client secret of the source. Required if a publishable key is used to retrieve the source.
    string client_secret = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string source = 3;
}

message GetSourcesSourceSourceTransactionsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;
    string source = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetSourcesSourceSourceTransactionsSourceTransactionRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string source = 2;
    string source_transaction = 3;
}

message GetSubscriptionItemsItemRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string item = 2;
}

message GetSubscriptionItemsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;

    // The ID of the subscription whose items will be retrieved.
    string subscription = 5;
}

message GetSubscriptionItemsSubscriptionItemUsageRecordSummariesRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
    string subscription_item = 5;
}

message GetSubscriptionSchedulesRequest {
    message CanceledAtMessage {}

    message CompletedAtMessage {}

    message CreatedMessage {}

    message ReleasedAtMessage {}

    // Only return subscription schedules that were created canceled the given date interval.
    CanceledAtMessage canceled_at = 1;

    // Only return subscription schedules that completed during the given date interval.
    CompletedAtMessage completed_at = 2;

    // Only return subscription schedules that were created during the given date interval.
    CreatedMessage created = 3;

    // Only return subscription schedules for the given customer.
    string customer = 4;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 5;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 6;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 7;

    // Only return subscription schedules that were released during the given date interval.
    ReleasedAtMessage released_at = 8;

    // Only return subscription schedules that have not started yet.
    bool scheduled = 9;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 10;
}

message GetSubscriptionSchedulesScheduleRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string schedule = 2;
}

message GetSubscriptionsRequest {
    enum GetSubscriptionsRequestCollectionMethod {
        GET_SUBSCRIPTIONS_REQUEST_COLLECTION_METHOD_CHARGE_AUTOMATICALLY = 0;
        GET_SUBSCRIPTIONS_REQUEST_COLLECTION_METHOD_SEND_INVOICE = 1;
    }

    enum GetSubscriptionsRequestStatus {
        GET_SUBSCRIPTIONS_REQUEST_STATUS_ACTIVE = 0;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_ALL = 1;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_CANCELED = 2;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_ENDED = 3;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_INCOMPLETE = 4;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_INCOMPLETE_EXPIRED = 5;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_PAST_DUE = 6;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_TRIALING = 7;
        GET_SUBSCRIPTIONS_REQUEST_STATUS_UNPAID = 8;
    }

    message CreatedMessage {}

    message CurrentPeriodEndMessage {}

    message CurrentPeriodStartMessage {}

    // The collection method of the subscriptions to retrieve. Either `charge_automatically` or `send_invoice`.
    GetSubscriptionsRequestCollectionMethod collection_method = 1;
    CreatedMessage created = 2;
    CurrentPeriodEndMessage current_period_end = 3;
    CurrentPeriodStartMessage current_period_start = 4;

    // The ID of the customer whose subscriptions will be retrieved.
    string customer = 5;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 6;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 7;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 8;

    // Filter for subscriptions that contain this recurring price ID.
    string price = 9;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 10;

    // The status of the subscriptions to retrieve. Passing in a value of `canceled` will return all canceled subscriptions, including those belonging to deleted customers. Pass `ended` to find subscriptions that are canceled and subscriptions that are expired due to [incomplete payment](https://stripe.com/docs/billing/subscriptions/overview#subscription-statuses). Passing in a value of `all` will return subscriptions of all statuses. If no value is supplied, all subscriptions that have not been canceled are returned.
    GetSubscriptionsRequestStatus status = 11;
}

message GetSubscriptionsSubscriptionExposedIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string subscription_exposed_id = 2;
}

message GetTaxRatesRequest {
    message CreatedMessage {}

    // Optional flag to filter by tax rates that are either active or inactive (archived).
    bool active = 1;

    // Optional range for filtering created date.
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // Optional flag to filter by tax rates that are inclusive (or those that are not inclusive).
    bool inclusive = 5;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 6;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 7;
}

message GetTaxRatesTaxRateRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string tax_rate = 2;
}

message GetTerminalLocationsLocationRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string location = 2;
}

message GetTerminalLocationsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetTerminalReadersReaderRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string reader = 2;
}

message GetTerminalReadersRequest {
    enum GetTerminalReadersRequestDeviceType {
        GET_TERMINAL_READERS_REQUEST_DEVICE_TYPE_BBPOS_CHIPPER2X = 0;
        GET_TERMINAL_READERS_REQUEST_DEVICE_TYPE_VERIFONE_P400 = 1;
    }

    enum GetTerminalReadersRequestStatus {
        GET_TERMINAL_READERS_REQUEST_STATUS_OFFLINE = 0;
        GET_TERMINAL_READERS_REQUEST_STATUS_ONLINE = 1;
    }

    // Filters readers by device type
    GetTerminalReadersRequestDeviceType device_type = 1;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 2;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A location ID to filter the response list to only readers at the specific location
    string location = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;

    // A status filter to filter readers to only offline or online readers
    GetTerminalReadersRequestStatus status = 7;
}

message GetTokensTokenRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string token = 2;
}

message GetTopupsRequest {
    enum GetTopupsRequestStatus {
        GET_TOPUPS_REQUEST_STATUS_CANCELED = 0;
        GET_TOPUPS_REQUEST_STATUS_FAILED = 1;
        GET_TOPUPS_REQUEST_STATUS_PENDING = 2;
        GET_TOPUPS_REQUEST_STATUS_SUCCEEDED = 3;
    }

    message AmountMessage {}

    message CreatedMessage {}

    // A positive integer representing how much to transfer.
    AmountMessage amount = 1;

    // A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
    CreatedMessage created = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;

    // Only return top-ups that have the given status. One of `canceled`, `failed`, `pending` or `succeeded`.
    GetTopupsRequestStatus status = 7;
}

message GetTopupsTopupRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string topup = 2;
}

message GetTransfersIdReversalsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;
    string id = 3;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 4;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 5;
}

message GetTransfersRequest {
    message CreatedMessage {}

    CreatedMessage created = 1;

    // Only return transfers for the destination specified by this account ID.
    string destination = 2;

    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 3;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 4;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 5;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 6;

    // Only return transfers with the specified transfer group.
    string transfer_group = 7;
}

message GetTransfersTransferRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string transfer = 2;
}

message GetTransfersTransferReversalsIdRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string id = 2;
    string transfer = 3;
}

message GetWebhookEndpointsRequest {
    // A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
    string ending_before = 1;

    // Specifies which fields in the response should be expanded.
    repeated string expand = 2;

    // A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
    int32 limit = 3;

    // A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    string starting_after = 4;
}

message GetWebhookEndpointsWebhookEndpointRequest {
    // Specifies which fields in the response should be expanded.
    repeated string expand = 1;
    string webhook_endpoint = 2;
}

message PostAccountBankAccountsIdRequest {
    string id = 1;
}

message PostAccountCapabilitiesCapabilityRequest {
    string capability = 1;
}

message PostAccountExternalAccountsIdRequest {
    string id = 1;
}

message PostAccountPeoplePersonRequest {
    string person = 1;
}

message PostAccountPersonsPersonRequest {
    string person = 1;
}

message PostAccountsAccountBankAccountsIdRequest {
    string account = 1;
    string id = 2;
}

message PostAccountsAccountBankAccountsRequest {
    string account = 1;
}

message PostAccountsAccountCapabilitiesCapabilityRequest {
    string account = 1;
    string capability = 2;
}

message PostAccountsAccountExternalAccountsIdRequest {
    string account = 1;
    string id = 2;
}

message PostAccountsAccountExternalAccountsRequest {
    string account = 1;
}

message PostAccountsAccountLoginLinksRequest {
    string account = 1;
}

message PostAccountsAccountPeoplePersonRequest {
    string account = 1;
    string person = 2;
}

message PostAccountsAccountPeopleRequest {
    string account = 1;
}

message PostAccountsAccountPersonsPersonRequest {
    string account = 1;
    string person = 2;
}

message PostAccountsAccountPersonsRequest {
    string account = 1;
}

message PostAccountsAccountRejectRequest {
    string account = 1;
}

message PostAccountsAccountRequest {
    string account = 1;
}

message PostApplicationFeesFeeRefundsIdRequest {
    string fee = 1;
    string id = 2;
}

message PostApplicationFeesIdRefundRequest {
    string id = 1;
}

message PostApplicationFeesIdRefundsRequest {
    string id = 1;
}

message PostBillingPortalConfigurationsConfigurationRequest {
    string configuration = 1;
}

message PostChargesChargeCaptureRequest {
    string charge = 1;
}

message PostChargesChargeDisputeCloseRequest {
    string charge = 1;
}

message PostChargesChargeDisputeRequest {
    string charge = 1;
}

message PostChargesChargeRefundRequest {
    string charge = 1;
}

message PostChargesChargeRefundsRefundRequest {
    string charge = 1;
    string refund = 2;
}

message PostChargesChargeRefundsRequest {
    string charge = 1;
}

message PostChargesChargeRequest {
    string charge = 1;
}

message PostCouponsCouponRequest {
    string coupon = 1;
}

message PostCreditNotesIdRequest {
    string id = 1;
}

message PostCreditNotesIdVoidRequest {
    string id = 1;
}

message PostCustomersCustomerBalanceTransactionsRequest {
    string customer = 1;
}

message PostCustomersCustomerBalanceTransactionsTransactionRequest {
    string customer = 1;
    string transaction = 2;
}

message PostCustomersCustomerBankAccountsIdRequest {
    string customer = 1;
    string id = 2;
}

message PostCustomersCustomerBankAccountsIdVerifyRequest {
    string customer = 1;
    string id = 2;
}

message PostCustomersCustomerBankAccountsRequest {
    string customer = 1;
}

message PostCustomersCustomerCardsIdRequest {
    string customer = 1;
    string id = 2;
}

message PostCustomersCustomerCardsRequest {
    string customer = 1;
}

message PostCustomersCustomerRequest {
    string customer = 1;
}

message PostCustomersCustomerSourcesIdRequest {
    string customer = 1;
    string id = 2;
}

message PostCustomersCustomerSourcesIdVerifyRequest {
    string customer = 1;
    string id = 2;
}

message PostCustomersCustomerSourcesRequest {
    string customer = 1;
}

message PostCustomersCustomerSubscriptionsRequest {
    string customer = 1;
}

message PostCustomersCustomerSubscriptionsSubscriptionExposedIdRequest {
    string customer = 1;
    string subscription_exposed_id = 2;
}

message PostCustomersCustomerTaxIdsRequest {
    string customer = 1;
}

message PostDisputesDisputeCloseRequest {
    string dispute = 1;
}

message PostDisputesDisputeRequest {
    string dispute = 1;
}

message PostFileLinksLinkRequest {
    string link = 1;
}

message PostIdentityVerificationSessionsSessionCancelRequest {
    string session = 1;
}

message PostIdentityVerificationSessionsSessionRedactRequest {
    string session = 1;
}

message PostIdentityVerificationSessionsSessionRequest {
    string session = 1;
}

message PostInvoiceitemsInvoiceitemRequest {
    string invoiceitem = 1;
}

message PostInvoicesInvoiceFinalizeRequest {
    string invoice = 1;
}

message PostInvoicesInvoiceMarkUncollectibleRequest {
    string invoice = 1;
}

message PostInvoicesInvoicePayRequest {
    string invoice = 1;
}

message PostInvoicesInvoiceRequest {
    string invoice = 1;
}

message PostInvoicesInvoiceSendRequest {
    string invoice = 1;
}

message PostInvoicesInvoiceVoidRequest {
    string invoice = 1;
}

message PostIssuingAuthorizationsAuthorizationApproveRequest {
    string authorization = 1;
}

message PostIssuingAuthorizationsAuthorizationDeclineRequest {
    string authorization = 1;
}

message PostIssuingAuthorizationsAuthorizationRequest {
    string authorization = 1;
}

message PostIssuingCardholdersCardholderRequest {
    string cardholder = 1;
}

message PostIssuingCardsCardRequest {
    string card = 1;
}

message PostIssuingDisputesDisputeRequest {
    string dispute = 1;
}

message PostIssuingDisputesDisputeSubmitRequest {
    string dispute = 1;
}

message PostIssuingSettlementsSettlementRequest {
    string settlement = 1;
}

message PostIssuingTransactionsTransactionRequest {
    string transaction = 1;
}

message PostOrdersIdPayRequest {
    string id = 1;
}

message PostOrdersIdRequest {
    string id = 1;
}

message PostOrdersIdReturnsRequest {
    string id = 1;
}

message PostPaymentIntentsIntentCancelRequest {
    string intent = 1;
}

message PostPaymentIntentsIntentCaptureRequest {
    string intent = 1;
}

message PostPaymentIntentsIntentConfirmRequest {
    string intent = 1;
}

message PostPaymentIntentsIntentRequest {
    string intent = 1;
}

message PostPaymentMethodsPaymentMethodAttachRequest {
    string payment_method = 1;
}

message PostPaymentMethodsPaymentMethodDetachRequest {
    string payment_method = 1;
}

message PostPaymentMethodsPaymentMethodRequest {
    string payment_method = 1;
}

message PostPayoutsPayoutCancelRequest {
    string payout = 1;
}

message PostPayoutsPayoutRequest {
    string payout = 1;
}

message PostPayoutsPayoutReverseRequest {
    string payout = 1;
}

message PostPlansPlanRequest {
    string plan = 1;
}

message PostPricesPriceRequest {
    string price = 1;
}

message PostProductsIdRequest {
    string id = 1;
}

message PostPromotionCodesPromotionCodeRequest {
    string promotion_code = 1;
}

message PostRadarValueListsValueListRequest {
    string value_list = 1;
}

message PostRecipientsIdRequest {
    string id = 1;
}

message PostRefundsRefundRequest {
    string refund = 1;
}

message PostReviewsReviewApproveRequest {
    string review = 1;
}

message PostSetupIntentsIntentCancelRequest {
    string intent = 1;
}

message PostSetupIntentsIntentConfirmRequest {
    string intent = 1;
}

message PostSetupIntentsIntentRequest {
    string intent = 1;
}

message PostSkusIdRequest {
    string id = 1;
}

message PostSourcesSourceRequest {
    string source = 1;
}

message PostSourcesSourceVerifyRequest {
    string source = 1;
}

message PostSubscriptionItemsItemRequest {
    string item = 1;
}

message PostSubscriptionItemsSubscriptionItemUsageRecordsRequest {
    string subscription_item = 1;
}

message PostSubscriptionSchedulesScheduleCancelRequest {
    string schedule = 1;
}

message PostSubscriptionSchedulesScheduleReleaseRequest {
    string schedule = 1;
}

message PostSubscriptionSchedulesScheduleRequest {
    string schedule = 1;
}

message PostSubscriptionsSubscriptionExposedIdRequest {
    string subscription_exposed_id = 1;
}

message PostTaxRatesTaxRateRequest {
    string tax_rate = 1;
}

message PostTerminalLocationsLocationRequest {
    string location = 1;
}

message PostTerminalReadersReaderRequest {
    string reader = 1;
}

message PostTopupsTopupCancelRequest {
    string topup = 1;
}

message PostTopupsTopupRequest {
    string topup = 1;
}

message PostTransfersIdReversalsRequest {
    string id = 1;
}

message PostTransfersTransferRequest {
    string transfer = 1;
}

message PostTransfersTransferReversalsIdRequest {
    string id = 1;
    string transfer = 2;
}

message PostWebhookEndpointsWebhookEndpointRequest {
    string webhook_endpoint = 1;
}

message PutAccountsAccountLogoutRequest {
    string account = 1;
}

service StripeAPIService {
    // <p>With <a href="/docs/connect">Connect</a>, you can delete Custom or Express accounts you manage.</p>
    // 
    // <p>Accounts created using test-mode keys can be deleted at any time. Accounts created using live-mode keys can only be deleted once all balances are zero.</p>
    // 
    // <p>If you want to delete your own account, use the <a href="https://dashboard.stripe.com/account">account information tab in your account settings</a> instead.</p>
    rpc DeleteAccount(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Delete a specified external account for a given account.</p>
    rpc DeleteAccountBankAccountsId(DeleteAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified external account for a given account.</p>
    rpc DeleteAccountExternalAccountsId(DeleteAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>
    rpc DeleteAccountPeoplePerson(DeleteAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>
    rpc DeleteAccountPersonsPerson(DeleteAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>With <a href="/docs/connect">Connect</a>, you can delete Custom or Express accounts you manage.</p>
    // 
    // <p>Accounts created using test-mode keys can be deleted at any time. Accounts created using live-mode keys can only be deleted once all balances are zero.</p>
    // 
    // <p>If you want to delete your own account, use the <a href="https://dashboard.stripe.com/account">account information tab in your account settings</a> instead.</p>
    rpc DeleteAccountsAccount(DeleteAccountsAccountRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified external account for a given account.</p>
    rpc DeleteAccountsAccountBankAccountsId(DeleteAccountsAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified external account for a given account.</p>
    rpc DeleteAccountsAccountExternalAccountsId(DeleteAccountsAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>
    rpc DeleteAccountsAccountPeoplePerson(DeleteAccountsAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an existing person’s relationship to the account’s legal entity. Any person with a relationship for an account can be deleted through the API, except if the person is the <code>account_opener</code>. If your integration is using the <code>executive</code> parameter, you cannot delete the only verified <code>executive</code> on file.</p>
    rpc DeleteAccountsAccountPersonsPerson(DeleteAccountsAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>Delete an apple pay domain.</p>
    rpc DeleteApplePayDomainsDomain(DeleteApplePayDomainsDomainRequest) returns (google.protobuf.Empty) {}

    // <p>You can delete coupons via the <a href="https://dashboard.stripe.com/coupons">coupon management</a> page of the Stripe dashboard. However, deleting a coupon does not affect any customers who have already applied the coupon; it means that new customers can’t redeem the coupon. You can also delete coupons via the API.</p>
    rpc DeleteCouponsCoupon(DeleteCouponsCouponRequest) returns (google.protobuf.Empty) {}

    // <p>Permanently deletes a customer. It cannot be undone. Also immediately cancels any active subscriptions on the customer.</p>
    rpc DeleteCustomersCustomer(DeleteCustomersCustomerRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified source for a given customer.</p>
    rpc DeleteCustomersCustomerBankAccountsId(DeleteCustomersCustomerBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified source for a given customer.</p>
    rpc DeleteCustomersCustomerCardsId(DeleteCustomersCustomerCardsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Removes the currently applied discount on a customer.</p>
    rpc DeleteCustomersCustomerDiscount(DeleteCustomersCustomerDiscountRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a specified source for a given customer.</p>
    rpc DeleteCustomersCustomerSourcesId(DeleteCustomersCustomerSourcesIdRequest) returns (google.protobuf.Empty) {}

    // <p>Cancels a customer’s subscription. If you set the <code>at_period_end</code> parameter to <code>true</code>, the subscription will remain active until the end of the period, at which point it will be canceled and not renewed. Otherwise, with the default <code>false</code> value, the subscription is terminated immediately. In either case, the customer will not be charged again for the subscription.</p>
    // 
    // <p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>
    // 
    // <p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>
    rpc DeleteCustomersCustomerSubscriptionsSubscriptionExposedId(DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    // <p>Removes the currently applied discount on a customer.</p>
    rpc DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount(DeleteCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an existing <code>TaxID</code> object.</p>
    rpc DeleteCustomersCustomerTaxIdsId(DeleteCustomersCustomerTaxIdsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Invalidates a short-lived API key for a given resource.</p>
    rpc DeleteEphemeralKeysKey(DeleteEphemeralKeysKeyRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an invoice item, removing it from an invoice. Deleting invoice items is only possible when they’re not attached to invoices, or if it’s attached to a draft invoice.</p>
    rpc DeleteInvoiceitemsInvoiceitem(DeleteInvoiceitemsInvoiceitemRequest) returns (google.protobuf.Empty) {}

    // <p>Permanently deletes a one-off invoice draft. This cannot be undone. Attempts to delete invoices that are no longer in a draft state will fail; once an invoice has been finalized or if an invoice is for a subscription, it must be <a href="#void_invoice">voided</a>.</p>
    rpc DeleteInvoicesInvoice(DeleteInvoicesInvoiceRequest) returns (google.protobuf.Empty) {}

    // <p>Deleting plans means new subscribers can’t be added. Existing subscribers aren’t affected.</p>
    rpc DeletePlansPlan(DeletePlansPlanRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a product. Deleting a product is only possible if it has no prices associated with it. Additionally, deleting a product with <code>type=good</code> is only possible if it has no SKUs associated with it.</p>
    rpc DeleteProductsId(DeleteProductsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes a <code>ValueListItem</code> object, removing it from its parent value list.</p>
    rpc DeleteRadarValueListItemsItem(DeleteRadarValueListItemsItemRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes a <code>ValueList</code> object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.</p>
    rpc DeleteRadarValueListsValueList(DeleteRadarValueListsValueListRequest) returns (google.protobuf.Empty) {}

    // <p>Permanently deletes a recipient. It cannot be undone.</p>
    rpc DeleteRecipientsId(DeleteRecipientsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Delete a SKU. Deleting a SKU is only possible until it has been used in an order.</p>
    rpc DeleteSkusId(DeleteSkusIdRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes an item from the subscription. Removing a subscription item from a subscription will not cancel the subscription.</p>
    rpc DeleteSubscriptionItemsItem(DeleteSubscriptionItemsItemRequest) returns (google.protobuf.Empty) {}

    // <p>Cancels a customer’s subscription immediately. The customer will not be charged again for the subscription.</p>
    // 
    // <p>Note, however, that any pending invoice items that you’ve created will still be charged for at the end of the period, unless manually <a href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription to cancel at the end of the period, any pending prorations will also be left in place and collected at the end of the period. But if the subscription is set to cancel immediately, pending prorations will be removed.</p>
    // 
    // <p>By default, upon subscription cancellation, Stripe will stop automatic collection of all finalized invoices for the customer. This is intended to prevent unexpected payment attempts after the customer has canceled a subscription. However, you can resume automatic collection of the invoices manually after subscription cancellation to have us proceed. Or, you could check for unpaid invoices before allowing the customer to cancel the subscription at all.</p>
    rpc DeleteSubscriptionsSubscriptionExposedId(DeleteSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    // <p>Removes the currently applied discount on a subscription.</p>
    rpc DeleteSubscriptionsSubscriptionExposedIdDiscount(DeleteSubscriptionsSubscriptionExposedIdDiscountRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes a <code>Location</code> object.</p>
    rpc DeleteTerminalLocationsLocation(DeleteTerminalLocationsLocationRequest) returns (google.protobuf.Empty) {}

    // <p>Deletes a <code>Reader</code> object.</p>
    rpc DeleteTerminalReadersReader(DeleteTerminalReadersReaderRequest) returns (google.protobuf.Empty) {}

    // <p>You can also delete webhook endpoints via the <a href="https://dashboard.stripe.com/account/webhooks">webhook endpoint management</a> page of the Stripe dashboard.</p>
    rpc DeleteWebhookEndpointsWebhookEndpoint(DeleteWebhookEndpointsWebhookEndpointRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a 3D Secure object.</p>
    rpc Get3dSecureThreeDSecure(Get3dSecureThreeDSecureRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an account.</p>
    rpc GetAccount(GetAccountRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a specified external account for a given account.</p>
    rpc GetAccountBankAccountsId(GetAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>
    rpc GetAccountCapabilities(GetAccountCapabilitiesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves information about the specified Account Capability.</p>
    rpc GetAccountCapabilitiesCapability(GetAccountCapabilitiesCapabilityRequest) returns (google.protobuf.Empty) {}

    // <p>List external accounts for an account.</p>
    rpc GetAccountExternalAccounts(GetAccountExternalAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a specified external account for a given account.</p>
    rpc GetAccountExternalAccountsId(GetAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>
    rpc GetAccountPeople(GetAccountPeopleRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing person.</p>
    rpc GetAccountPeoplePerson(GetAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>
    rpc GetAccountPersons(GetAccountPersonsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing person.</p>
    rpc GetAccountPersonsPerson(GetAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of accounts connected to your platform via <a href="/docs/connect">Connect</a>. If you’re not a platform, the list is empty.</p>
    rpc GetAccounts(GetAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an account.</p>
    rpc GetAccountsAccount(GetAccountsAccountRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a specified external account for a given account.</p>
    rpc GetAccountsAccountBankAccountsId(GetAccountsAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of capabilities associated with the account. The capabilities are returned sorted by creation date, with the most recent capability appearing first.</p>
    rpc GetAccountsAccountCapabilities(GetAccountsAccountCapabilitiesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves information about the specified Account Capability.</p>
    rpc GetAccountsAccountCapabilitiesCapability(GetAccountsAccountCapabilitiesCapabilityRequest) returns (google.protobuf.Empty) {}

    // <p>List external accounts for an account.</p>
    rpc GetAccountsAccountExternalAccounts(GetAccountsAccountExternalAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a specified external account for a given account.</p>
    rpc GetAccountsAccountExternalAccountsId(GetAccountsAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>
    rpc GetAccountsAccountPeople(GetAccountsAccountPeopleRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing person.</p>
    rpc GetAccountsAccountPeoplePerson(GetAccountsAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of people associated with the account’s legal entity. The people are returned sorted by creation date, with the most recent people appearing first.</p>
    rpc GetAccountsAccountPersons(GetAccountsAccountPersonsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing person.</p>
    rpc GetAccountsAccountPersonsPerson(GetAccountsAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>List apple pay domains.</p>
    rpc GetApplePayDomains(GetApplePayDomainsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve an apple pay domain.</p>
    rpc GetApplePayDomainsDomain(GetApplePayDomainsDomainRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of application fees you’ve previously collected. The application fees are returned in sorted order, with the most recent fees appearing first.</p>
    rpc GetApplicationFees(GetApplicationFeesRequest) returns (google.protobuf.Empty) {}

    // <p>By default, you can see the 10 most recent refunds stored directly on the application fee object, but you can also retrieve details about a specific refund stored on the application fee.</p>
    rpc GetApplicationFeesFeeRefundsId(GetApplicationFeesFeeRefundsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an application fee that your account has collected. The same information is returned when refunding the application fee.</p>
    rpc GetApplicationFeesId(GetApplicationFeesIdRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the refunds belonging to a specific application fee. Note that the 10 most recent refunds are always available by default on the application fee object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>
    rpc GetApplicationFeesIdRefunds(GetApplicationFeesIdRefundsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the current account balance, based on the authentication that was used to make the request.
    //  For a sample request, see <a href="/docs/connect/account-balances#accounting-for-negative-balances">Accounting for negative balances</a>.</p>
    rpc GetBalance(GetBalanceRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>
    // 
    // <p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>
    rpc GetBalanceHistory(GetBalanceHistoryRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the balance transaction with the given ID.</p>
    // 
    // <p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>
    rpc GetBalanceHistoryId(GetBalanceHistoryIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of transactions that have contributed to the Stripe account balance (e.g., charges, transfers, and so forth). The transactions are returned in sorted order, with the most recent transactions appearing first.</p>
    // 
    // <p>Note that this endpoint was previously called “Balance history” and used the path <code>/v1/balance/history</code>.</p>
    rpc GetBalanceTransactions(GetBalanceTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the balance transaction with the given ID.</p>
    // 
    // <p>Note that this endpoint previously used the path <code>/v1/balance/history/:id</code>.</p>
    rpc GetBalanceTransactionsId(GetBalanceTransactionsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of configurations that describe the functionality of the customer portal.</p>
    rpc GetBillingPortalConfigurations(GetBillingPortalConfigurationsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a configuration that describes the functionality of the customer portal.</p>
    rpc GetBillingPortalConfigurationsConfiguration(GetBillingPortalConfigurationsConfigurationRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your receivers. Receivers are returned sorted by creation date, with the most recently created receivers appearing first.</p>
    rpc GetBitcoinReceivers(GetBitcoinReceiversRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the Bitcoin receiver with the given ID.</p>
    rpc GetBitcoinReceiversId(GetBitcoinReceiversIdRequest) returns (google.protobuf.Empty) {}

    // <p>List bitcoin transacitons for a given receiver.</p>
    rpc GetBitcoinReceiversReceiverTransactions(GetBitcoinReceiversReceiverTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>List bitcoin transacitons for a given receiver.</p>
    rpc GetBitcoinTransactions(GetBitcoinTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of charges you’ve previously created. The charges are returned in sorted order, with the most recent charges appearing first.</p>
    rpc GetCharges(GetChargesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of a charge that has previously been created. Supply the unique charge ID that was returned from your previous request, and Stripe will return the corresponding charge information. The same information is returned when creating or refunding the charge.</p>
    rpc GetChargesCharge(GetChargesChargeRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a dispute for a specified charge.</p>
    rpc GetChargesChargeDispute(GetChargesChargeDisputeRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the refunds belonging to a specific charge. Note that the 10 most recent refunds are always available by default on the charge object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional refunds.</p>
    rpc GetChargesChargeRefunds(GetChargesChargeRefundsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing refund.</p>
    rpc GetChargesChargeRefundsRefund(GetChargesChargeRefundsRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Checkout Sessions.</p>
    rpc GetCheckoutSessions(GetCheckoutSessionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a Session object.</p>
    rpc GetCheckoutSessionsSession(GetCheckoutSessionsSessionRequest) returns (google.protobuf.Empty) {}

    // <p>When retrieving a Checkout Session, there is an includable <strong>line_items</strong> property containing the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>
    rpc GetCheckoutSessionsSessionLineItems(GetCheckoutSessionsSessionLineItemsRequest) returns (google.protobuf.Empty) {}

    // <p>Lists all Country Spec objects available in the API.</p>
    rpc GetCountrySpecs(GetCountrySpecsRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a Country Spec for a given Country code.</p>
    rpc GetCountrySpecsCountry(GetCountrySpecsCountryRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your coupons.</p>
    rpc GetCoupons(GetCouponsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the coupon with the given ID.</p>
    rpc GetCouponsCoupon(GetCouponsCouponRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of credit notes.</p>
    rpc GetCreditNotes(GetCreditNotesRequest) returns (google.protobuf.Empty) {}

    // <p>When retrieving a credit note, you’ll get a <strong>lines</strong> property containing the the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>
    rpc GetCreditNotesCreditNoteLines(GetCreditNotesCreditNoteLinesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the credit note object with the given identifier.</p>
    rpc GetCreditNotesId(GetCreditNotesIdRequest) returns (google.protobuf.Empty) {}

    // <p>Get a preview of a credit note without creating it.</p>
    rpc GetCreditNotesPreview(GetCreditNotesPreviewRequest) returns (google.protobuf.Empty) {}

    // <p>When retrieving a credit note preview, you’ll get a <strong>lines</strong> property containing the first handful of those items. This URL you can retrieve the full (paginated) list of line items.</p>
    rpc GetCreditNotesPreviewLines(GetCreditNotesPreviewLinesRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your customers. The customers are returned sorted by creation date, with the most recent customers appearing first.</p>
    rpc GetCustomers(GetCustomersRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing customer. You need only supply the unique customer identifier that was returned upon customer creation.</p>
    rpc GetCustomersCustomer(GetCustomersCustomerRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of transactions that updated the customer’s <a href="/docs/billing/customer/balance">balances</a>.</p>
    rpc GetCustomersCustomerBalanceTransactions(GetCustomersCustomerBalanceTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a specific customer balance transaction that updated the customer’s <a href="/docs/billing/customer/balance">balances</a>.</p>
    rpc GetCustomersCustomerBalanceTransactionsTransaction(GetCustomersCustomerBalanceTransactionsTransactionRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the bank accounts belonging to a Customer. Note that the 10 most recent sources are always available by default on the Customer. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional bank accounts.</p>
    rpc GetCustomersCustomerBankAccounts(GetCustomersCustomerBankAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>By default, you can see the 10 most recent sources stored on a Customer directly on the object, but you can also retrieve details about a specific bank account stored on the Stripe account.</p>
    rpc GetCustomersCustomerBankAccountsId(GetCustomersCustomerBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the cards belonging to a customer.
    // Note that the 10 most recent sources are always available on the <code>Customer</code> object.
    // If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional cards.</p>
    rpc GetCustomersCustomerCards(GetCustomersCustomerCardsRequest) returns (google.protobuf.Empty) {}

    // <p>You can always see the 10 most recent cards directly on a customer; this method lets you retrieve details about a specific card stored on the customer.</p>
    rpc GetCustomersCustomerCardsId(GetCustomersCustomerCardsIdRequest) returns (google.protobuf.Empty) {}

    rpc GetCustomersCustomerDiscount(GetCustomersCustomerDiscountRequest) returns (google.protobuf.Empty) {}

    // <p>List sources for a specified customer.</p>
    rpc GetCustomersCustomerSources(GetCustomersCustomerSourcesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve a specified source for a given customer.</p>
    rpc GetCustomersCustomerSourcesId(GetCustomersCustomerSourcesIdRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the customer’s active subscriptions. Note that the 10 most recent active subscriptions are always available by default on the customer object. If you need more than those 10, you can use the limit and starting_after parameters to page through additional subscriptions.</p>
    rpc GetCustomersCustomerSubscriptions(GetCustomersCustomerSubscriptionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the subscription with the given ID.</p>
    rpc GetCustomersCustomerSubscriptionsSubscriptionExposedId(GetCustomersCustomerSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    rpc GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscount(GetCustomersCustomerSubscriptionsSubscriptionExposedIdDiscountRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of tax IDs for a customer.</p>
    rpc GetCustomersCustomerTaxIds(GetCustomersCustomerTaxIdsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the <code>TaxID</code> object with the given identifier.</p>
    rpc GetCustomersCustomerTaxIdsId(GetCustomersCustomerTaxIdsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your disputes.</p>
    rpc GetDisputes(GetDisputesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the dispute with the given ID.</p>
    rpc GetDisputesDispute(GetDisputesDisputeRequest) returns (google.protobuf.Empty) {}

    // <p>List events, going back up to 30 days. Each event data is rendered according to Stripe API version at its creation time, specified in <a href="/docs/api/events/object">event object</a> <code>api_version</code> attribute (not according to your current Stripe API version or <code>Stripe-Version</code> header).</p>
    rpc GetEvents(GetEventsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an event. Supply the unique identifier of the event, which you might have received in a webhook.</p>
    rpc GetEventsId(GetEventsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of objects that contain the rates at which foreign currencies are converted to one another. Only shows the currencies for which Stripe supports.</p>
    rpc GetExchangeRates(GetExchangeRatesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the exchange rates from the given currency to every supported currency.</p>
    rpc GetExchangeRatesRateId(GetExchangeRatesRateIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of file links.</p>
    rpc GetFileLinks(GetFileLinksRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the file link with the given ID.</p>
    rpc GetFileLinksLink(GetFileLinksLinkRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of the files that your account has access to. The files are returned sorted by creation date, with the most recently created files appearing first.</p>
    rpc GetFiles(GetFilesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing file object. Supply the unique file ID from a file, and Stripe will return the corresponding file object. To access file contents, see the <a href="/docs/file-upload#download-file-contents">File Upload Guide</a>.</p>
    rpc GetFilesFile(GetFilesFileRequest) returns (google.protobuf.Empty) {}

    // <p>List all verification reports.</p>
    rpc GetIdentityVerificationReports(GetIdentityVerificationReportsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing VerificationReport</p>
    rpc GetIdentityVerificationReportsReport(GetIdentityVerificationReportsReportRequest) returns (google.protobuf.Empty) {}

    // <p>List all verification sessions. Can optionally provide a status to return only VerificationSessions with that status. Can optionally specify a query filter on created timestamp.</p>
    rpc GetIdentityVerificationSessions(GetIdentityVerificationSessionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing VerificationSession. When the session <code>status</code> is <code>requires_input</code>, this method guarantees
    // that the redirect <code>url</code> is fresh: if your user has previously visited this session, a new <code>url</code> will be returned.
    // Before redirecting your user to Stripe, ensure that you have just Created or Retrieved the VerificationSession;
    // never cache or store the <code>url</code>.</p>
    rpc GetIdentityVerificationSessionsSession(GetIdentityVerificationSessionsSessionRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your invoice items. Invoice items are returned sorted by creation date, with the most recently created invoice items appearing first.</p>
    rpc GetInvoiceitems(GetInvoiceitemsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the invoice item with the given ID.</p>
    rpc GetInvoiceitemsInvoiceitem(GetInvoiceitemsInvoiceitemRequest) returns (google.protobuf.Empty) {}

    // <p>You can list all invoices, or list the invoices for a specific customer. The invoices are returned sorted by creation date, with the most recently created invoices appearing first.</p>
    rpc GetInvoices(GetInvoicesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the invoice with the given ID.</p>
    rpc GetInvoicesInvoice(GetInvoicesInvoiceRequest) returns (google.protobuf.Empty) {}

    // <p>When retrieving an invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>
    rpc GetInvoicesInvoiceLines(GetInvoicesInvoiceLinesRequest) returns (google.protobuf.Empty) {}

    // <p>At any time, you can preview the upcoming invoice for a customer. This will show you all the charges that are pending, including subscription renewal charges, invoice item charges, etc. It will also show you any discounts that are applicable to the invoice.</p>
    // 
    // <p>Note that when you are viewing an upcoming invoice, you are simply viewing a preview – the invoice has not yet been created. As such, the upcoming invoice will not show up in invoice listing calls, and you cannot use the API to pay or edit the invoice. If you want to change the amount that your customer will be billed, you can add, remove, or update pending invoice items, or update the customer’s discount.</p>
    // 
    // <p>You can preview the effects of updating a subscription, including a preview of what proration will take place. To ensure that the actual proration is calculated exactly the same as the previewed proration, you should pass a <code>proration_date</code> parameter when doing the actual subscription update. The value passed in should be the same as the <code>subscription_proration_date</code> returned on the upcoming invoice resource. The recommended way to get only the prorations being previewed is to consider only proration line items where <code>period[start]</code> is equal to the <code>subscription_proration_date</code> on the upcoming invoice resource.</p>
    rpc GetInvoicesUpcoming(GetInvoicesUpcomingRequest) returns (google.protobuf.Empty) {}

    // <p>When retrieving an upcoming invoice, you’ll get a <strong>lines</strong> property containing the total count of line items and the first handful of those items. There is also a URL where you can retrieve the full (paginated) list of line items.</p>
    rpc GetInvoicesUpcomingLines(GetInvoicesUpcomingLinesRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of issuer fraud records.</p>
    rpc GetIssuerFraudRecords(GetIssuerFraudRecordsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an issuer fraud record that has previously been created. </p>
    // 
    // <p>Please refer to the <a href="#issuer_fraud_record_object">issuer fraud record</a> object reference for more details.</p>
    rpc GetIssuerFraudRecordsIssuerFraudRecord(GetIssuerFraudRecordsIssuerFraudRecordRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Authorization</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingAuthorizations(GetIssuingAuthorizationsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Authorization</code> object.</p>
    rpc GetIssuingAuthorizationsAuthorization(GetIssuingAuthorizationsAuthorizationRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Cardholder</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingCardholders(GetIssuingCardholdersRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Cardholder</code> object.</p>
    rpc GetIssuingCardholdersCardholder(GetIssuingCardholdersCardholderRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Card</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingCards(GetIssuingCardsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Card</code> object.</p>
    rpc GetIssuingCardsCard(GetIssuingCardsCardRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Dispute</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingDisputes(GetIssuingDisputesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Dispute</code> object.</p>
    rpc GetIssuingDisputesDispute(GetIssuingDisputesDisputeRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Settlement</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingSettlements(GetIssuingSettlementsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Settlement</code> object.</p>
    rpc GetIssuingSettlementsSettlement(GetIssuingSettlementsSettlementRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Issuing <code>Transaction</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetIssuingTransactions(GetIssuingTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an Issuing <code>Transaction</code> object.</p>
    rpc GetIssuingTransactionsTransaction(GetIssuingTransactionsTransactionRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a Mandate object.</p>
    rpc GetMandatesMandate(GetMandatesMandateRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your order returns. The returns are returned sorted by creation date, with the most recently created return appearing first.</p>
    rpc GetOrderReturns(GetOrderReturnsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing order return. Supply the unique order ID from either an order return creation request or the order return list, and Stripe will return the corresponding order information.</p>
    rpc GetOrderReturnsId(GetOrderReturnsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your orders. The orders are returned sorted by creation date, with the most recently created orders appearing first.</p>
    rpc GetOrders(GetOrdersRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing order. Supply the unique order ID from either an order creation request or the order list, and Stripe will return the corresponding order information.</p>
    rpc GetOrdersId(GetOrdersIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of PaymentIntents.</p>
    rpc GetPaymentIntents(GetPaymentIntentsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of a PaymentIntent that has previously been created. </p>
    // 
    // <p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>
    // 
    // <p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href="#payment_intent_object">payment intent</a> object reference for more details.</p>
    rpc GetPaymentIntentsIntent(GetPaymentIntentsIntentRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of PaymentMethods for a given Customer</p>
    rpc GetPaymentMethods(GetPaymentMethodsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a PaymentMethod object.</p>
    rpc GetPaymentMethodsPaymentMethod(GetPaymentMethodsPaymentMethodRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of existing payouts sent to third-party bank accounts or that Stripe has sent you. The payouts are returned in sorted order, with the most recently created payouts appearing first.</p>
    rpc GetPayouts(GetPayoutsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing payout. Supply the unique payout ID from either a payout creation request or the payout list, and Stripe will return the corresponding payout information.</p>
    rpc GetPayoutsPayout(GetPayoutsPayoutRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your plans.</p>
    rpc GetPlans(GetPlansRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the plan with the given ID.</p>
    rpc GetPlansPlan(GetPlansPlanRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your prices.</p>
    rpc GetPrices(GetPricesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the price with the given ID.</p>
    rpc GetPricesPrice(GetPricesPriceRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your products. The products are returned sorted by creation date, with the most recently created products appearing first.</p>
    rpc GetProducts(GetProductsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing product. Supply the unique product ID from either a product creation request or the product list, and Stripe will return the corresponding product information.</p>
    rpc GetProductsId(GetProductsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your promotion codes.</p>
    rpc GetPromotionCodes(GetPromotionCodesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the promotion code with the given ID.</p>
    rpc GetPromotionCodesPromotionCode(GetPromotionCodesPromotionCodeRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of early fraud warnings.</p>
    rpc GetRadarEarlyFraudWarnings(GetRadarEarlyFraudWarningsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an early fraud warning that has previously been created. </p>
    // 
    // <p>Please refer to the <a href="#early_fraud_warning_object">early fraud warning</a> object reference for more details.</p>
    rpc GetRadarEarlyFraudWarningsEarlyFraudWarning(GetRadarEarlyFraudWarningsEarlyFraudWarningRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of <code>ValueListItem</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetRadarValueListItems(GetRadarValueListItemsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a <code>ValueListItem</code> object.</p>
    rpc GetRadarValueListItemsItem(GetRadarValueListItemsItemRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of <code>ValueList</code> objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetRadarValueLists(GetRadarValueListsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a <code>ValueList</code> object.</p>
    rpc GetRadarValueListsValueList(GetRadarValueListsValueListRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your recipients. The recipients are returned sorted by creation date, with the most recently created recipients appearing first.</p>
    rpc GetRecipients(GetRecipientsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing recipient. You need only supply the unique recipient identifier that was returned upon recipient creation.</p>
    rpc GetRecipientsId(GetRecipientsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of all refunds you’ve previously created. The refunds are returned in sorted order, with the most recent refunds appearing first. For convenience, the 10 most recent refunds are always available by default on the charge object.</p>
    rpc GetRefunds(GetRefundsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing refund.</p>
    rpc GetRefundsRefund(GetRefundsRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of Report Runs, with the most recent appearing first.</p>
    rpc GetReportingReportRuns(GetReportingReportRunsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing Report Run.</p>
    rpc GetReportingReportRunsReportRun(GetReportingReportRunsReportRunRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a full list of Report Types.</p>
    rpc GetReportingReportTypes(GetReportingReportTypesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of a Report Type. (Certain report types require a <a href="https://stripe.com/docs/keys#test-live-modes">live-mode API key</a>.)</p>
    rpc GetReportingReportTypesReportType(GetReportingReportTypesReportTypeRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of <code>Review</code> objects that have <code>open</code> set to <code>true</code>. The objects are sorted in descending order by creation date, with the most recently created object appearing first.</p>
    rpc GetReviews(GetReviewsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a <code>Review</code> object.</p>
    rpc GetReviewsReview(GetReviewsReviewRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of SetupAttempts associated with a provided SetupIntent.</p>
    rpc GetSetupAttempts(GetSetupAttemptsRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of SetupIntents.</p>
    rpc GetSetupIntents(GetSetupIntentsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of a SetupIntent that has previously been created. </p>
    // 
    // <p>Client-side retrieval using a publishable key is allowed when the <code>client_secret</code> is provided in the query string. </p>
    // 
    // <p>When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the <a href="#setup_intent_object">SetupIntent</a> object reference for more details.</p>
    rpc GetSetupIntentsIntent(GetSetupIntentsIntentRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of scheduled query runs.</p>
    rpc GetSigmaScheduledQueryRuns(GetSigmaScheduledQueryRunsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an scheduled query run.</p>
    rpc GetSigmaScheduledQueryRunsScheduledQueryRun(GetSigmaScheduledQueryRunsScheduledQueryRunRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your SKUs. The SKUs are returned sorted by creation date, with the most recently created SKUs appearing first.</p>
    rpc GetSkus(GetSkusRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing SKU. Supply the unique SKU identifier from either a SKU creation request or from the product, and Stripe will return the corresponding SKU information.</p>
    rpc GetSkusId(GetSkusIdRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves an existing source object. Supply the unique source ID from a source creation request and Stripe will return the corresponding up-to-date source object information.</p>
    rpc GetSourcesSource(GetSourcesSourceRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a new Source MandateNotification.</p>
    rpc GetSourcesSourceMandateNotificationsMandateNotification(GetSourcesSourceMandateNotificationsMandateNotificationRequest) returns (google.protobuf.Empty) {}

    // <p>List source transactions for a given source.</p>
    rpc GetSourcesSourceSourceTransactions(GetSourcesSourceSourceTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieve an existing source transaction object. Supply the unique source ID from a source creation request and the source transaction ID and Stripe will return the corresponding up-to-date source object information.</p>
    rpc GetSourcesSourceSourceTransactionsSourceTransaction(GetSourcesSourceSourceTransactionsSourceTransactionRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your subscription items for a given subscription.</p>
    rpc GetSubscriptionItems(GetSubscriptionItemsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the subscription item with the given ID.</p>
    rpc GetSubscriptionItemsItem(GetSubscriptionItemsItemRequest) returns (google.protobuf.Empty) {}

    // <p>For the specified subscription item, returns a list of summary objects. Each object in the list provides usage information that’s been summarized from multiple usage records and over a subscription billing period (e.g., 15 usage records in the month of September).</p>
    // 
    // <p>The list is sorted in reverse-chronological order (newest first). The first list item represents the most current usage period that hasn’t ended yet. Since new usage records can still be added, the returned summary information for the subscription item’s ID should be seen as unstable until the subscription billing period ends.</p>
    rpc GetSubscriptionItemsSubscriptionItemUsageRecordSummaries(GetSubscriptionItemsSubscriptionItemUsageRecordSummariesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the list of your subscription schedules.</p>
    rpc GetSubscriptionSchedules(GetSubscriptionSchedulesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing subscription schedule. You only need to supply the unique subscription schedule identifier that was returned upon subscription schedule creation.</p>
    rpc GetSubscriptionSchedulesSchedule(GetSubscriptionSchedulesScheduleRequest) returns (google.protobuf.Empty) {}

    // <p>By default, returns a list of subscriptions that have not been canceled. In order to list canceled subscriptions, specify <code>status=canceled</code>.</p>
    rpc GetSubscriptions(GetSubscriptionsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the subscription with the given ID.</p>
    rpc GetSubscriptionsSubscriptionExposedId(GetSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your tax rates. Tax rates are returned sorted by creation date, with the most recently created tax rates appearing first.</p>
    rpc GetTaxRates(GetTaxRatesRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a tax rate with the given ID</p>
    rpc GetTaxRatesTaxRate(GetTaxRatesTaxRateRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of <code>Location</code> objects.</p>
    rpc GetTerminalLocations(GetTerminalLocationsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a <code>Location</code> object.</p>
    rpc GetTerminalLocationsLocation(GetTerminalLocationsLocationRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of <code>Reader</code> objects.</p>
    rpc GetTerminalReaders(GetTerminalReadersRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves a <code>Reader</code> object.</p>
    rpc GetTerminalReadersReader(GetTerminalReadersReaderRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the token with the given ID.</p>
    rpc GetTokensToken(GetTokensTokenRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of top-ups.</p>
    rpc GetTopups(GetTopupsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of a top-up that has previously been created. Supply the unique top-up ID that was returned from your previous request, and Stripe will return the corresponding top-up information.</p>
    rpc GetTopupsTopup(GetTopupsTopupRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.</p>
    rpc GetTransfers(GetTransfersRequest) returns (google.protobuf.Empty) {}

    // <p>You can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the <code>limit</code> and <code>starting_after</code> parameters to page through additional reversals.</p>
    rpc GetTransfersIdReversals(GetTransfersIdReversalsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the details of an existing transfer. Supply the unique transfer ID from either a transfer creation request or the transfer list, and Stripe will return the corresponding transfer information.</p>
    rpc GetTransfersTransfer(GetTransfersTransferRequest) returns (google.protobuf.Empty) {}

    // <p>By default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.</p>
    rpc GetTransfersTransferReversalsId(GetTransfersTransferReversalsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Returns a list of your webhook endpoints.</p>
    rpc GetWebhookEndpoints(GetWebhookEndpointsRequest) returns (google.protobuf.Empty) {}

    // <p>Retrieves the webhook endpoint with the given ID.</p>
    rpc GetWebhookEndpointsWebhookEndpoint(GetWebhookEndpointsWebhookEndpointRequest) returns (google.protobuf.Empty) {}

    // <p>Initiate 3D Secure authentication.</p>
    rpc Post3dSecure(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a connected <a href="/docs/connect/accounts">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>
    // 
    // <p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating accounts.</p>
    rpc PostAccount(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Create an external account for a given account.</p>
    rpc PostAccountBankAccounts(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>
    // 
    // <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
    rpc PostAccountBankAccountsId(PostAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Updates an existing Account Capability.</p>
    rpc PostAccountCapabilitiesCapability(PostAccountCapabilitiesCapabilityRequest) returns (google.protobuf.Empty) {}

    // <p>Create an external account for a given account.</p>
    rpc PostAccountExternalAccounts(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>
    // 
    // <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
    rpc PostAccountExternalAccountsId(PostAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Creates an AccountLink object that includes a single-use Stripe URL that the platform can redirect their user to in order to take them through the Connect Onboarding flow.</p>
    rpc PostAccountLinks(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>
    // 
    // <p><strong>You may only create login links for <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
    rpc PostAccountLoginLinks(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Creates a new person.</p>
    rpc PostAccountPeople(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing person.</p>
    rpc PostAccountPeoplePerson(PostAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new person.</p>
    rpc PostAccountPersons(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing person.</p>
    rpc PostAccountPersonsPerson(PostAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>With <a href="/docs/connect">Connect</a>, you can create Stripe accounts for your users.
    // To do this, you’ll first need to <a href="https://dashboard.stripe.com/account/applications/settings">register your platform</a>.</p>
    rpc PostAccounts(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a connected <a href="/docs/connect/accounts">Express or Custom account</a> by setting the values of the parameters passed. Any parameters not provided are left unchanged. Most parameters can be changed only for Custom accounts. (These are marked <strong>Custom Only</strong> below.) Parameters marked <strong>Custom and Express</strong> are supported by both account types.</p>
    // 
    // <p>To update your own account, use the <a href="https://dashboard.stripe.com/account">Dashboard</a>. Refer to our <a href="/docs/connect/updating-accounts">Connect</a> documentation to learn more about updating accounts.</p>
    rpc PostAccountsAccount(PostAccountsAccountRequest) returns (google.protobuf.Empty) {}

    // <p>Create an external account for a given account.</p>
    rpc PostAccountsAccountBankAccounts(PostAccountsAccountBankAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>
    // 
    // <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
    rpc PostAccountsAccountBankAccountsId(PostAccountsAccountBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Updates an existing Account Capability.</p>
    rpc PostAccountsAccountCapabilitiesCapability(PostAccountsAccountCapabilitiesCapabilityRequest) returns (google.protobuf.Empty) {}

    // <p>Create an external account for a given account.</p>
    rpc PostAccountsAccountExternalAccounts(PostAccountsAccountExternalAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata, account holder name, and account holder type of a bank account belonging to a <a href="/docs/connect/custom-accounts">Custom account</a>, and optionally sets it as the default for its currency. Other bank account details are not editable by design.</p>
    // 
    // <p>You can re-enable a disabled bank account by performing an update call without providing any arguments or changes.</p>
    rpc PostAccountsAccountExternalAccountsId(PostAccountsAccountExternalAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a single-use login link for an Express account to access their Stripe dashboard.</p>
    // 
    // <p><strong>You may only create login links for <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
    rpc PostAccountsAccountLoginLinks(PostAccountsAccountLoginLinksRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new person.</p>
    rpc PostAccountsAccountPeople(PostAccountsAccountPeopleRequest) returns (google.protobuf.Empty) {}

    // <p>Updates an existing person.</p>
    rpc PostAccountsAccountPeoplePerson(PostAccountsAccountPeoplePersonRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new person.</p>
    rpc PostAccountsAccountPersons(PostAccountsAccountPersonsRequest) returns (google.protobuf.Empty) {}

    // <p>Updates an existing person.</p>
    rpc PostAccountsAccountPersonsPerson(PostAccountsAccountPersonsPersonRequest) returns (google.protobuf.Empty) {}

    // <p>With <a href="/docs/connect">Connect</a>, you may flag accounts as suspicious.</p>
    // 
    // <p>Test-mode Custom and Express accounts can be rejected at any time. Accounts created using live-mode keys may only be rejected once all balances are zero.</p>
    rpc PostAccountsAccountReject(PostAccountsAccountRejectRequest) returns (google.protobuf.Empty) {}

    // <p>Create an apple pay domain.</p>
    rpc PostApplePayDomains(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified application fee refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>This request only accepts metadata as an argument.</p>
    rpc PostApplicationFeesFeeRefundsId(PostApplicationFeesFeeRefundsIdRequest) returns (google.protobuf.Empty) {}

    rpc PostApplicationFeesIdRefund(PostApplicationFeesIdRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Refunds an application fee that has previously been collected but not yet refunded.
    // Funds will be refunded to the Stripe account from which the fee was originally collected.</p>
    // 
    // <p>You can optionally refund only part of an application fee.
    // You can do so multiple times, until the entire fee has been refunded.</p>
    // 
    // <p>Once entirely refunded, an application fee can’t be refunded again.
    // This method will raise an error when called on an already-refunded application fee,
    // or when trying to refund more money than is left on an application fee.</p>
    rpc PostApplicationFeesIdRefunds(PostApplicationFeesIdRefundsRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a configuration that describes the functionality and behavior of a PortalSession</p>
    rpc PostBillingPortalConfigurations(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a configuration that describes the functionality of the customer portal.</p>
    rpc PostBillingPortalConfigurationsConfiguration(PostBillingPortalConfigurationsConfigurationRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a session of the customer portal.</p>
    rpc PostBillingPortalSessions(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>To charge a credit card or other payment source, you create a <code>Charge</code> object. If your API key is in test mode, the supplied payment source (e.g., card) won’t actually be charged, although everything else will occur as if in live mode. (Stripe assumes that the charge would have completed successfully).</p>
    rpc PostCharges(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified charge by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostChargesCharge(PostChargesChargeRequest) returns (google.protobuf.Empty) {}

    // <p>Capture the payment of an existing, uncaptured, charge. This is the second half of the two-step payment flow, where first you <a href="#create_charge">created a charge</a> with the capture option set to false.</p>
    // 
    // <p>Uncaptured payments expire exactly seven days after they are created. If they are not captured by that point in time, they will be marked as refunded and will no longer be capturable.</p>
    rpc PostChargesChargeCapture(PostChargesChargeCaptureRequest) returns (google.protobuf.Empty) {}

    rpc PostChargesChargeDispute(PostChargesChargeDisputeRequest) returns (google.protobuf.Empty) {}

    rpc PostChargesChargeDisputeClose(PostChargesChargeDisputeCloseRequest) returns (google.protobuf.Empty) {}

    // <p>When you create a new refund, you must specify a Charge or a PaymentIntent object on which to create it.</p>
    // 
    // <p>Creating a new refund will refund a charge that has previously been created but not yet refunded.
    // Funds will be refunded to the credit or debit card that was originally charged.</p>
    // 
    // <p>You can optionally refund only part of a charge.
    // You can do so multiple times, until the entire charge has been refunded.</p>
    // 
    // <p>Once entirely refunded, a charge can’t be refunded again.
    // This method will raise an error when called on an already-refunded charge,
    // or when trying to refund more money than is left on a charge.</p>
    rpc PostChargesChargeRefund(PostChargesChargeRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Create a refund.</p>
    rpc PostChargesChargeRefunds(PostChargesChargeRefundsRequest) returns (google.protobuf.Empty) {}

    // <p>Update a specified refund.</p>
    rpc PostChargesChargeRefundsRefund(PostChargesChargeRefundsRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a Session object.</p>
    rpc PostCheckoutSessions(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>You can create coupons easily via the <a href="https://dashboard.stripe.com/coupons">coupon management</a> page of the Stripe dashboard. Coupon creation is also accessible via the API if you need to create coupons on the fly.</p>
    // 
    // <p>A coupon has either a <code>percent_off</code> or an <code>amount_off</code> and <code>currency</code>. If you set an <code>amount_off</code>, that amount will be subtracted from any invoice’s subtotal. For example, an invoice with a subtotal of <currency>100</currency> will have a final total of <currency>0</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it and an invoice with a subtotal of <currency>300</currency> will have a final total of <currency>100</currency> if a coupon with an <code>amount_off</code> of <amount>200</amount> is applied to it.</p>
    rpc PostCoupons(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata of a coupon. Other coupon details (currency, duration, amount_off) are, by design, not editable.</p>
    rpc PostCouponsCoupon(PostCouponsCouponRequest) returns (google.protobuf.Empty) {}

    // <p>Issue a credit note to adjust the amount of a finalized invoice. For a <code>status=open</code> invoice, a credit note reduces
    // its <code>amount_due</code>. For a <code>status=paid</code> invoice, a credit note does not affect its <code>amount_due</code>. Instead, it can result
    // in any combination of the following:</p>
    // 
    // <ul>
    // <li>Refund: create a new refund (using <code>refund_amount</code>) or link an existing refund (using <code>refund</code>).</li>
    // <li>Customer balance credit: credit the customer’s balance (using <code>credit_amount</code>) which will be automatically applied to their next invoice when it’s finalized.</li>
    // <li>Outside of Stripe credit: record the amount that is or will be credited outside of Stripe (using <code>out_of_band_amount</code>).</li>
    // </ul>
    // 
    // <p>For post-payment credit notes the sum of the refund, credit and outside of Stripe amounts must equal the credit note total.</p>
    // 
    // <p>You may issue multiple credit notes for an invoice. Each credit note will increment the invoice’s <code>pre_payment_credit_notes_amount</code>
    // or <code>post_payment_credit_notes_amount</code> depending on its <code>status</code> at the time of credit note creation.</p>
    rpc PostCreditNotes(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing credit note.</p>
    rpc PostCreditNotesId(PostCreditNotesIdRequest) returns (google.protobuf.Empty) {}

    // <p>Marks a credit note as void. Learn more about <a href="/docs/billing/invoices/credit-notes#voiding">voiding credit notes</a>.</p>
    rpc PostCreditNotesIdVoid(PostCreditNotesIdVoidRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new customer object.</p>
    rpc PostCustomers(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified customer by setting the values of the parameters passed. Any parameters not provided will be left unchanged. For example, if you pass the <strong>source</strong> parameter, that becomes the customer’s active source (e.g., a card) to be used for all charges in the future. When you update a customer to a new valid card source by passing the <strong>source</strong> parameter: for each of the customer’s current subscriptions, if the subscription bills automatically and is in the <code>past_due</code> state, then the latest open invoice for the subscription with automatic collection enabled will be retried. This retry will not count as an automatic retry, and will not affect the next regularly scheduled payment for the invoice. Changing the <strong>default_source</strong> for a customer will not trigger this behavior.</p>
    // 
    // <p>This request accepts mostly the same arguments as the customer creation call.</p>
    rpc PostCustomersCustomer(PostCustomersCustomerRequest) returns (google.protobuf.Empty) {}

    // <p>Creates an immutable transaction that updates the customer’s credit <a href="/docs/billing/customer/balance">balance</a>.</p>
    rpc PostCustomersCustomerBalanceTransactions(PostCustomersCustomerBalanceTransactionsRequest) returns (google.protobuf.Empty) {}

    // <p>Most credit balance transaction fields are immutable, but you may update its <code>description</code> and <code>metadata</code>.</p>
    rpc PostCustomersCustomerBalanceTransactionsTransaction(PostCustomersCustomerBalanceTransactionsTransactionRequest) returns (google.protobuf.Empty) {}

    // <p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>
    // 
    // <p>If the card’s owner has no default card, then the new card will become the default.
    // However, if the owner already has a default, then it will not change.
    // To change the default, you should <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>.</p>
    rpc PostCustomersCustomerBankAccounts(PostCustomersCustomerBankAccountsRequest) returns (google.protobuf.Empty) {}

    // <p>Update a specified source for a given customer.</p>
    rpc PostCustomersCustomerBankAccountsId(PostCustomersCustomerBankAccountsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Verify a specified bank account for a given customer.</p>
    rpc PostCustomersCustomerBankAccountsIdVerify(PostCustomersCustomerBankAccountsIdVerifyRequest) returns (google.protobuf.Empty) {}

    // <p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>
    // 
    // <p>If the card’s owner has no default card, then the new card will become the default.
    // However, if the owner already has a default, then it will not change.
    // To change the default, you should <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>.</p>
    rpc PostCustomersCustomerCards(PostCustomersCustomerCardsRequest) returns (google.protobuf.Empty) {}

    // <p>Update a specified source for a given customer.</p>
    rpc PostCustomersCustomerCardsId(PostCustomersCustomerCardsIdRequest) returns (google.protobuf.Empty) {}

    // <p>When you create a new credit card, you must specify a customer or recipient on which to create it.</p>
    // 
    // <p>If the card’s owner has no default card, then the new card will become the default.
    // However, if the owner already has a default, then it will not change.
    // To change the default, you should <a href="/docs/api#update_customer">update the customer</a> to have a new <code>default_source</code>.</p>
    rpc PostCustomersCustomerSources(PostCustomersCustomerSourcesRequest) returns (google.protobuf.Empty) {}

    // <p>Update a specified source for a given customer.</p>
    rpc PostCustomersCustomerSourcesId(PostCustomersCustomerSourcesIdRequest) returns (google.protobuf.Empty) {}

    // <p>Verify a specified bank account for a given customer.</p>
    rpc PostCustomersCustomerSourcesIdVerify(PostCustomersCustomerSourcesIdVerifyRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new subscription on an existing customer.</p>
    rpc PostCustomersCustomerSubscriptions(PostCustomersCustomerSubscriptionsRequest) returns (google.protobuf.Empty) {}

    // <p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href="#upcoming_invoice">upcoming invoice</a> endpoint.</p>
    rpc PostCustomersCustomerSubscriptionsSubscriptionExposedId(PostCustomersCustomerSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>TaxID</code> object for a customer.</p>
    rpc PostCustomersCustomerTaxIds(PostCustomersCustomerTaxIdsRequest) returns (google.protobuf.Empty) {}

    // <p>When you get a dispute, contacting your customer is always the best first step. If that doesn’t work, you can submit evidence to help us resolve the dispute in your favor. You can do this in your <a href="https://dashboard.stripe.com/disputes">dashboard</a>, but if you prefer, you can use the API to submit evidence programmatically.</p>
    // 
    // <p>Depending on your dispute type, different evidence fields will give you a better chance of winning your dispute. To figure out which evidence fields to provide, see our <a href="/docs/disputes/categories">guide to dispute types</a>.</p>
    rpc PostDisputesDispute(PostDisputesDisputeRequest) returns (google.protobuf.Empty) {}

    // <p>Closing the dispute for a charge indicates that you do not have any evidence to submit and are essentially dismissing the dispute, acknowledging it as lost.</p>
    // 
    // <p>The status of the dispute will change from <code>needs_response</code> to <code>lost</code>. <em>Closing a dispute is irreversible</em>.</p>
    rpc PostDisputesDisputeClose(PostDisputesDisputeCloseRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a short-lived API key for a given resource.</p>
    rpc PostEphemeralKeys(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Creates a new file link object.</p>
    rpc PostFileLinks(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing file link object. Expired links can no longer be updated.</p>
    rpc PostFileLinksLink(PostFileLinksLinkRequest) returns (google.protobuf.Empty) {}

    // <p>To upload a file to Stripe, you’ll need to send a request of type <code>multipart/form-data</code>. The request should contain the file you would like to upload, as well as the parameters for creating a file.</p>
    // 
    // <p>All of Stripe’s officially supported Client libraries should have support for sending <code>multipart/form-data</code>.</p>
    rpc PostFiles(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Create a new VerificationSession to begin the verification process.</p>
    rpc PostIdentityVerificationSessions(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Update properties on a VerificationSession</p>
    rpc PostIdentityVerificationSessionsSession(PostIdentityVerificationSessionsSessionRequest) returns (google.protobuf.Empty) {}

    // <p>Mark a VerificationSession as canceled.</p>
    // 
    // <p>If the VerificationSession is in the <code>processing</code> state, you must wait until it
    // finishes before cancelling it.</p>
    rpc PostIdentityVerificationSessionsSessionCancel(PostIdentityVerificationSessionsSessionCancelRequest) returns (google.protobuf.Empty) {}

    // <p>Redact a VerificationSession to delete all collected information from Stripe.
    // This will redact the VerificationSession and all objects related to it, including
    // VerificationReports, Events, Files, request logs, etc. This redaction process may
    // take up to four days. When the redaction process is in progress, the
    // VerificationSession’s <code>redaction.status</code> field will be set to <code>processing</code>; when
    // the process is finished, it will change to <code>redacted</code>.</p>
    // 
    // <p>Redaction is irreversible. Redacted objects are still accessible in the Stripe API,
    // but all the fields that contain personal data will be replaced by the string
    // <code>[redacted]</code> or a similar placeholder. The <code>metadata</code> field will also be erased.
    // Redacted objects cannot be updated or used for any purpose.</p>
    // 
    // <p>If the VerificationSession is in the <code>processing</code> state, you must wait until it
    // finishes before redacting it. Redacting a VerificationSession in <code>requires_action</code>
    // state will automatically <a href="/docs/api/verification_sessions/cancel">cancel</a> it.</p>
    // 
    // <p>An <a href="/docs/api/events/types#event_types-identity.verification_session.redacted"><code>identity.verification_session.redacted</code></a>
    // webhook will be sent when a VerificationSession is redacted.</p>
    rpc PostIdentityVerificationSessionsSessionRedact(PostIdentityVerificationSessionsSessionRedactRequest) returns (google.protobuf.Empty) {}

    // <p>Creates an item to be added to a draft invoice (up to 250 items per invoice). If no invoice is specified, the item will be on the next invoice created for the customer specified.</p>
    rpc PostInvoiceitems(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the amount or description of an invoice item on an upcoming invoice. Updating an invoice item is only possible before the invoice it’s attached to is closed.</p>
    rpc PostInvoiceitemsInvoiceitem(PostInvoiceitemsInvoiceitemRequest) returns (google.protobuf.Empty) {}

    // <p>This endpoint creates a draft invoice for a given customer. The draft invoice created pulls in all pending invoice items on that customer, including prorations. The invoice remains a draft until you <a href="#finalize_invoice">finalize</a> the invoice, which allows you to <a href="#pay_invoice">pay</a> or <a href="#send_invoice">send</a> the invoice to your customers.</p>
    rpc PostInvoices(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Draft invoices are fully editable. Once an invoice is <a href="/docs/billing/invoices/workflow#finalized">finalized</a>,
    // monetary values, as well as <code>collection_method</code>, become uneditable.</p>
    // 
    // <p>If you would like to stop the Stripe Billing engine from automatically finalizing, reattempting payments on,
    // sending reminders for, or <a href="/docs/billing/invoices/reconciliation">automatically reconciling</a> invoices, pass
    // <code>auto_advance=false</code>.</p>
    rpc PostInvoicesInvoice(PostInvoicesInvoiceRequest) returns (google.protobuf.Empty) {}

    // <p>Stripe automatically finalizes drafts before sending and attempting payment on invoices. However, if you’d like to finalize a draft invoice manually, you can do so using this method.</p>
    rpc PostInvoicesInvoiceFinalize(PostInvoicesInvoiceFinalizeRequest) returns (google.protobuf.Empty) {}

    // <p>Marking an invoice as uncollectible is useful for keeping track of bad debts that can be written off for accounting purposes.</p>
    rpc PostInvoicesInvoiceMarkUncollectible(PostInvoicesInvoiceMarkUncollectibleRequest) returns (google.protobuf.Empty) {}

    // <p>Stripe automatically creates and then attempts to collect payment on invoices for customers on subscriptions according to your <a href="https://dashboard.stripe.com/account/billing/automatic">subscriptions settings</a>. However, if you’d like to attempt payment on an invoice out of the normal collection schedule or for some other reason, you can do so.</p>
    rpc PostInvoicesInvoicePay(PostInvoicesInvoicePayRequest) returns (google.protobuf.Empty) {}

    // <p>Stripe will automatically send invoices to customers according to your <a href="https://dashboard.stripe.com/account/billing/automatic">subscriptions settings</a>. However, if you’d like to manually send an invoice to your customer out of the normal schedule, you can do so. When sending invoices that have already been paid, there will be no reference to the payment in the email.</p>
    // 
    // <p>Requests made in test-mode result in no emails being sent, despite sending an <code>invoice.sent</code> event.</p>
    rpc PostInvoicesInvoiceSend(PostInvoicesInvoiceSendRequest) returns (google.protobuf.Empty) {}

    // <p>Mark a finalized invoice as void. This cannot be undone. Voiding an invoice is similar to <a href="#delete_invoice">deletion</a>, however it only applies to finalized invoices and maintains a papertrail where the invoice can still be found.</p>
    rpc PostInvoicesInvoiceVoid(PostInvoicesInvoiceVoidRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Authorization</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostIssuingAuthorizationsAuthorization(PostIssuingAuthorizationsAuthorizationRequest) returns (google.protobuf.Empty) {}

    // <p>Approves a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href="/docs/issuing/controls/real-time-authorizations">real-time authorization</a> flow.</p>
    rpc PostIssuingAuthorizationsAuthorizationApprove(PostIssuingAuthorizationsAuthorizationApproveRequest) returns (google.protobuf.Empty) {}

    // <p>Declines a pending Issuing <code>Authorization</code> object. This request should be made within the timeout window of the <a href="/docs/issuing/controls/real-time-authorizations">real time authorization</a> flow.</p>
    rpc PostIssuingAuthorizationsAuthorizationDecline(PostIssuingAuthorizationsAuthorizationDeclineRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new Issuing <code>Cardholder</code> object that can be issued cards.</p>
    rpc PostIssuingCardholders(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Cardholder</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostIssuingCardholdersCardholder(PostIssuingCardholdersCardholderRequest) returns (google.protobuf.Empty) {}

    // <p>Creates an Issuing <code>Card</code> object.</p>
    rpc PostIssuingCards(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Card</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostIssuingCardsCard(PostIssuingCardsCardRequest) returns (google.protobuf.Empty) {}

    // <p>Creates an Issuing <code>Dispute</code> object. Individual pieces of evidence within the <code>evidence</code> object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to <a href="/docs/issuing/purchases/disputes#dispute-reasons-and-evidence">Dispute reasons and evidence</a> for more details about evidence requirements.</p>
    rpc PostIssuingDisputes(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Dispute</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the <code>evidence</code> object can be unset by passing in an empty string.</p>
    rpc PostIssuingDisputesDispute(PostIssuingDisputesDisputeRequest) returns (google.protobuf.Empty) {}

    // <p>Submits an Issuing <code>Dispute</code> to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see <a href="/docs/issuing/purchases/disputes#dispute-reasons-and-evidence">Dispute reasons and evidence</a>.</p>
    rpc PostIssuingDisputesDisputeSubmit(PostIssuingDisputesDisputeSubmitRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Settlement</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostIssuingSettlementsSettlement(PostIssuingSettlementsSettlementRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the specified Issuing <code>Transaction</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostIssuingTransactionsTransaction(PostIssuingTransactionsTransactionRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new order object.</p>
    rpc PostOrders(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specific order by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostOrdersId(PostOrdersIdRequest) returns (google.protobuf.Empty) {}

    // <p>Pay an order by providing a <code>source</code> to create a payment.</p>
    rpc PostOrdersIdPay(PostOrdersIdPayRequest) returns (google.protobuf.Empty) {}

    // <p>Return all or part of an order. The order must have a status of <code>paid</code> or <code>fulfilled</code> before it can be returned. Once all items have been returned, the order will become <code>canceled</code> or <code>returned</code> depending on which status the order started in.</p>
    rpc PostOrdersIdReturns(PostOrdersIdReturnsRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a PaymentIntent object.</p>
    // 
    // <p>After the PaymentIntent is created, attach a payment method and <a href="/docs/api/payment_intents/confirm">confirm</a>
    // to continue the payment. You can read more about the different payment flows
    // available via the Payment Intents API <a href="/docs/payments/payment-intents">here</a>.</p>
    // 
    // <p>When <code>confirm=true</code> is used during creation, it is equivalent to creating
    // and confirming the PaymentIntent in the same call. You may use any parameters
    // available in the <a href="/docs/api/payment_intents/confirm">confirm API</a> when <code>confirm=true</code>
    // is supplied.</p>
    rpc PostPaymentIntents(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates properties on a PaymentIntent object without confirming.</p>
    // 
    // <p>Depending on which properties you update, you may need to confirm the
    // PaymentIntent again. For example, updating the <code>payment_method</code> will
    // always require you to confirm the PaymentIntent again. If you prefer to
    // update and confirm at the same time, we recommend updating properties via
    // the <a href="/docs/api/payment_intents/confirm">confirm API</a> instead.</p>
    rpc PostPaymentIntentsIntent(PostPaymentIntentsIntentRequest) returns (google.protobuf.Empty) {}

    // <p>A PaymentIntent object can be canceled when it is in one of these statuses: <code>requires_payment_method</code>, <code>requires_capture</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>
    // 
    // <p>Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with <code>status=’requires_capture’</code>, the remaining <code>amount_capturable</code> will automatically be refunded.</p>
    rpc PostPaymentIntentsIntentCancel(PostPaymentIntentsIntentCancelRequest) returns (google.protobuf.Empty) {}

    // <p>Capture the funds of an existing uncaptured PaymentIntent when its status is <code>requires_capture</code>.</p>
    // 
    // <p>Uncaptured PaymentIntents will be canceled exactly seven days after they are created.</p>
    // 
    // <p>Learn more about <a href="/docs/payments/capture-later">separate authorization and capture</a>.</p>
    rpc PostPaymentIntentsIntentCapture(PostPaymentIntentsIntentCaptureRequest) returns (google.protobuf.Empty) {}

    // <p>Confirm that your customer intends to pay with current or provided
    // payment method. Upon confirmation, the PaymentIntent will attempt to initiate
    // a payment.</p>
    // 
    // <p>If the selected payment method requires additional authentication steps, the
    // PaymentIntent will transition to the <code>requires_action</code> status and
    // suggest additional actions via <code>next_action</code>. If payment fails,
    // the PaymentIntent will transition to the <code>requires_payment_method</code> status. If
    // payment succeeds, the PaymentIntent will transition to the <code>succeeded</code>
    // status (or <code>requires_capture</code>, if <code>capture_method</code> is set to <code>manual</code>).</p>
    // 
    // <p>If the <code>confirmation_method</code> is <code>automatic</code>, payment may be attempted
    // using our <a href="/docs/stripe-js/reference#stripe-handle-card-payment">client SDKs</a>
    // and the PaymentIntent’s <a href="#payment_intent_object-client_secret">client_secret</a>.
    // After <code>next_action</code>s are handled by the client, no additional
    // confirmation is required to complete the payment.</p>
    // 
    // <p>If the <code>confirmation_method</code> is <code>manual</code>, all payment attempts must be
    // initiated using a secret key.
    // If any actions are required for the payment, the PaymentIntent will
    // return to the <code>requires_confirmation</code> state
    // after those actions are completed. Your server needs to then
    // explicitly re-confirm the PaymentIntent to initiate the next payment
    // attempt. Read the <a href="/docs/payments/payment-intents/web-manual">expanded documentation</a>
    // to learn more about manual confirmation.</p>
    rpc PostPaymentIntentsIntentConfirm(PostPaymentIntentsIntentConfirmRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a PaymentMethod object. Read the <a href="/docs/stripe-js/reference#stripe-create-payment-method">Stripe.js reference</a> to learn how to create PaymentMethods via Stripe.js.</p>
    rpc PostPaymentMethods(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a PaymentMethod object. A PaymentMethod must be attached a customer to be updated.</p>
    rpc PostPaymentMethodsPaymentMethod(PostPaymentMethodsPaymentMethodRequest) returns (google.protobuf.Empty) {}

    // <p>Attaches a PaymentMethod object to a Customer.</p>
    // 
    // <p>To attach a new PaymentMethod to a customer for future payments, we recommend you use a <a href="/docs/api/setup_intents">SetupIntent</a>
    // or a PaymentIntent with <a href="/docs/api/payment_intents/create#create_payment_intent-setup_future_usage">setup_future_usage</a>.
    // These approaches will perform any necessary steps to ensure that the PaymentMethod can be used in a future payment. Using the
    // <code>/v1/payment_methods/:id/attach</code> endpoint does not ensure that future payments can be made with the attached PaymentMethod.
    // See <a href="/docs/payments/payment-intents#future-usage">Optimizing cards for future payments</a> for more information about setting up future payments.</p>
    // 
    // <p>To use this PaymentMethod as the default for invoice or subscription payments,
    // set <a href="/docs/api/customers/update#update_customer-invoice_settings-default_payment_method"><code>invoice_settings.default_payment_method</code></a>,
    // on the Customer to the PaymentMethod’s ID.</p>
    rpc PostPaymentMethodsPaymentMethodAttach(PostPaymentMethodsPaymentMethodAttachRequest) returns (google.protobuf.Empty) {}

    // <p>Detaches a PaymentMethod object from a Customer.</p>
    rpc PostPaymentMethodsPaymentMethodDetach(PostPaymentMethodsPaymentMethodDetachRequest) returns (google.protobuf.Empty) {}

    // <p>To send funds to your own bank account, you create a new payout object. Your <a href="#balance">Stripe balance</a> must be able to cover the payout amount, or you’ll receive an “Insufficient Funds” error.</p>
    // 
    // <p>If your API key is in test mode, money won’t actually be sent, though everything else will occur as if in live mode.</p>
    // 
    // <p>If you are creating a manual payout on a Stripe account that uses multiple payment source types, you’ll need to specify the source type balance that the payout should draw from. The <a href="#balance_object">balance object</a> details available and pending amounts by source type.</p>
    rpc PostPayouts(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified payout by setting the values of the parameters passed. Any parameters not provided will be left unchanged. This request accepts only the metadata as arguments.</p>
    rpc PostPayoutsPayout(PostPayoutsPayoutRequest) returns (google.protobuf.Empty) {}

    // <p>A previously created payout can be canceled if it has not yet been paid out. Funds will be refunded to your available balance. You may not cancel automatic Stripe payouts.</p>
    rpc PostPayoutsPayoutCancel(PostPayoutsPayoutCancelRequest) returns (google.protobuf.Empty) {}

    // <p>Reverses a payout by debiting the destination bank account. Only payouts for connected accounts to US bank accounts may be reversed at this time. If the payout is in the <code>pending</code> status, <code>/v1/payouts/:id/cancel</code> should be used instead.</p>
    // 
    // <p>By requesting a reversal via <code>/v1/payouts/:id/reverse</code>, you confirm that the authorized signatory of the selected bank account has authorized the debit on the bank account and that no other authorization is required.</p>
    rpc PostPayoutsPayoutReverse(PostPayoutsPayoutReverseRequest) returns (google.protobuf.Empty) {}

    // <p>You can now model subscriptions more flexibly using the <a href="#prices">Prices API</a>. It replaces the Plans API and is backwards compatible to simplify your migration.</p>
    rpc PostPlans(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified plan by setting the values of the parameters passed. Any parameters not provided are left unchanged. By design, you cannot change a plan’s ID, amount, currency, or billing cycle.</p>
    rpc PostPlansPlan(PostPlansPlanRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new price for an existing product. The price can be recurring or one-time.</p>
    rpc PostPrices(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified price by setting the values of the parameters passed. Any parameters not provided are left unchanged.</p>
    rpc PostPricesPrice(PostPricesPriceRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new product object.</p>
    rpc PostProducts(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specific product by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostProductsId(PostProductsIdRequest) returns (google.protobuf.Empty) {}

    // <p>A promotion code points to a coupon. You can optionally restrict the code to a specific customer, redemption limit, and expiration date.</p>
    rpc PostPromotionCodes(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified promotion code by setting the values of the parameters passed. Most fields are, by design, not editable.</p>
    rpc PostPromotionCodesPromotionCode(PostPromotionCodesPromotionCodeRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>ValueListItem</code> object, which is added to the specified parent value list.</p>
    rpc PostRadarValueListItems(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>ValueList</code> object, which can then be referenced in rules.</p>
    rpc PostRadarValueLists(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a <code>ValueList</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that <code>item_type</code> is immutable.</p>
    rpc PostRadarValueListsValueList(PostRadarValueListsValueListRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>Recipient</code> object and verifies the recipient’s identity.
    // Also verifies the recipient’s bank account information or debit card, if either is provided.</p>
    rpc PostRecipients(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified recipient by setting the values of the parameters passed.
    // Any parameters not provided will be left unchanged.</p>
    // 
    // <p>If you update the name or tax ID, the identity verification will automatically be rerun.
    // If you update the bank account, the bank account validation will automatically be rerun.</p>
    rpc PostRecipientsId(PostRecipientsIdRequest) returns (google.protobuf.Empty) {}

    // <p>Create a refund.</p>
    rpc PostRefunds(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified refund by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>This request only accepts <code>metadata</code> as an argument.</p>
    rpc PostRefundsRefund(PostRefundsRefundRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new object and begin running the report. (Certain report types require a <a href="https://stripe.com/docs/keys#test-live-modes">live-mode API key</a>.)</p>
    rpc PostReportingReportRuns(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Approves a <code>Review</code> object, closing it and removing it from the list of reviews.</p>
    rpc PostReviewsReviewApprove(PostReviewsReviewApproveRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a SetupIntent object.</p>
    // 
    // <p>After the SetupIntent is created, attach a payment method and <a href="/docs/api/setup_intents/confirm">confirm</a>
    // to collect any required permissions to charge the payment method later.</p>
    rpc PostSetupIntents(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a SetupIntent object.</p>
    rpc PostSetupIntentsIntent(PostSetupIntentsIntentRequest) returns (google.protobuf.Empty) {}

    // <p>A SetupIntent object can be canceled when it is in one of these statuses: <code>requires_payment_method</code>, <code>requires_confirmation</code>, or <code>requires_action</code>. </p>
    // 
    // <p>Once canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.</p>
    rpc PostSetupIntentsIntentCancel(PostSetupIntentsIntentCancelRequest) returns (google.protobuf.Empty) {}

    // <p>Confirm that your customer intends to set up the current or
    // provided payment method. For example, you would confirm a SetupIntent
    // when a customer hits the “Save” button on a payment method management
    // page on your website.</p>
    // 
    // <p>If the selected payment method does not require any additional
    // steps from the customer, the SetupIntent will transition to the
    // <code>succeeded</code> status.</p>
    // 
    // <p>Otherwise, it will transition to the <code>requires_action</code> status and
    // suggest additional actions via <code>next_action</code>. If setup fails,
    // the SetupIntent will transition to the
    // <code>requires_payment_method</code> status.</p>
    rpc PostSetupIntentsIntentConfirm(PostSetupIntentsIntentConfirmRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new SKU associated with a product.</p>
    rpc PostSkus(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specific SKU by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>Note that a SKU’s <code>attributes</code> are not editable. Instead, you would need to deactivate the existing SKU and create a new one with the new attribute values.</p>
    rpc PostSkusId(PostSkusIdRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new source object.</p>
    rpc PostSources(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the specified source by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>This request accepts the <code>metadata</code> and <code>owner</code> as arguments. It is also possible to update type specific information for selected payment methods. Please refer to our <a href="/docs/sources">payment method guides</a> for more detail.</p>
    rpc PostSourcesSource(PostSourcesSourceRequest) returns (google.protobuf.Empty) {}

    // <p>Verify a given source.</p>
    rpc PostSourcesSourceVerify(PostSourcesSourceVerifyRequest) returns (google.protobuf.Empty) {}

    // <p>Adds a new item to an existing subscription. No existing items will be changed or replaced.</p>
    rpc PostSubscriptionItems(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the plan or quantity of an item on a current subscription.</p>
    rpc PostSubscriptionItemsItem(PostSubscriptionItemsItemRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a usage record for a specified subscription item and date, and fills it with a quantity.</p>
    // 
    // <p>Usage records provide <code>quantity</code> information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the <a href="https://stripe.com/docs/billing/subscriptions/metered-billing">metered billing</a> plan, Stripe helps you send accurate invoices to your customers.</p>
    // 
    // <p>The default calculation for usage is to add up all the <code>quantity</code> values of the usage records within a billing period. You can change this default behavior with the billing plan’s <code>aggregate_usage</code> <a href="/docs/api/plans/create#create_plan-aggregate_usage">parameter</a>. When there is more than one usage record with the same timestamp, Stripe adds the <code>quantity</code> values together. In most cases, this is the desired resolution, however, you can change this behavior with the <code>action</code> parameter.</p>
    // 
    // <p>The default pricing model for metered billing is <a href="/docs/api/plans/object#plan_object-billing_scheme">per-unit pricing</a>. For finer granularity, you can configure metered billing to have a <a href="https://stripe.com/docs/billing/subscriptions/tiers">tiered pricing</a> model.</p>
    rpc PostSubscriptionItemsSubscriptionItemUsageRecords(PostSubscriptionItemsSubscriptionItemUsageRecordsRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new subscription schedule object. Each customer can have up to 500 active or scheduled subscriptions.</p>
    rpc PostSubscriptionSchedules(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing subscription schedule.</p>
    rpc PostSubscriptionSchedulesSchedule(PostSubscriptionSchedulesScheduleRequest) returns (google.protobuf.Empty) {}

    // <p>Cancels a subscription schedule and its associated subscription immediately (if the subscription schedule has an active subscription). A subscription schedule can only be canceled if its status is <code>not_started</code> or <code>active</code>.</p>
    rpc PostSubscriptionSchedulesScheduleCancel(PostSubscriptionSchedulesScheduleCancelRequest) returns (google.protobuf.Empty) {}

    // <p>Releases the subscription schedule immediately, which will stop scheduling of its phases, but leave any existing subscription in place. A schedule can only be released if its status is <code>not_started</code> or <code>active</code>. If the subscription schedule is currently associated with a subscription, releasing it will remove its <code>subscription</code> property and set the subscription’s ID to the <code>released_subscription</code> property.</p>
    rpc PostSubscriptionSchedulesScheduleRelease(PostSubscriptionSchedulesScheduleReleaseRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new subscription on an existing customer. Each customer can have up to 500 active or scheduled subscriptions.</p>
    rpc PostSubscriptions(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing subscription on a customer to match the specified parameters. When changing plans or quantities, we will optionally prorate the price we charge next month to make up for any price changes. To preview how the proration will be calculated, use the <a href="#upcoming_invoice">upcoming invoice</a> endpoint.</p>
    rpc PostSubscriptionsSubscriptionExposedId(PostSubscriptionsSubscriptionExposedIdRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new tax rate.</p>
    rpc PostTaxRates(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates an existing tax rate.</p>
    rpc PostTaxRatesTaxRate(PostTaxRatesTaxRateRequest) returns (google.protobuf.Empty) {}

    // <p>To connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.</p>
    rpc PostTerminalConnectionTokens(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>Location</code> object.</p>
    rpc PostTerminalLocations(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a <code>Location</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostTerminalLocationsLocation(PostTerminalLocationsLocationRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a new <code>Reader</code> object.</p>
    rpc PostTerminalReaders(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates a <code>Reader</code> object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    rpc PostTerminalReadersReader(PostTerminalReadersReaderRequest) returns (google.protobuf.Empty) {}

    // <p>Creates a single-use token that represents a bank account’s details.
    // This token can be used with any API method in place of a bank account dictionary. This token can be used only once, by attaching it to a <a href="#accounts">Custom account</a>.</p>
    rpc PostTokens(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Top up the balance of an account</p>
    rpc PostTopups(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the metadata of a top-up. Other top-up details are not editable by design.</p>
    rpc PostTopupsTopup(PostTopupsTopupRequest) returns (google.protobuf.Empty) {}

    // <p>Cancels a top-up. Only pending top-ups can be canceled.</p>
    rpc PostTopupsTopupCancel(PostTopupsTopupCancelRequest) returns (google.protobuf.Empty) {}

    // <p>To send funds from your Stripe account to a connected account, you create a new transfer object. Your <a href="#balance">Stripe balance</a> must be able to cover the transfer amount, or you’ll receive an “Insufficient Funds” error.</p>
    rpc PostTransfers(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>When you create a new reversal, you must specify a transfer to create it on.</p>
    // 
    // <p>When reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.</p>
    // 
    // <p>Once entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.</p>
    rpc PostTransfersIdReversals(PostTransfersIdReversalsRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the specified transfer by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>This request accepts only metadata as an argument.</p>
    rpc PostTransfersTransfer(PostTransfersTransferRequest) returns (google.protobuf.Empty) {}

    // <p>Updates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.</p>
    // 
    // <p>This request only accepts metadata and description as arguments.</p>
    rpc PostTransfersTransferReversalsId(PostTransfersTransferReversalsIdRequest) returns (google.protobuf.Empty) {}

    // <p>A webhook endpoint must have a <code>url</code> and a list of <code>enabled_events</code>. You may optionally specify the Boolean <code>connect</code> parameter. If set to true, then a Connect webhook endpoint that notifies the specified <code>url</code> about events from all connected accounts is created; otherwise an account webhook endpoint that notifies the specified <code>url</code> only about events from your account is created. You can also create webhook endpoints in the <a href="https://dashboard.stripe.com/account/webhooks">webhooks settings</a> section of the Dashboard.</p>
    rpc PostWebhookEndpoints(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Updates the webhook endpoint. You may edit the <code>url</code>, the list of <code>enabled_events</code>, and the status of your endpoint.</p>
    rpc PostWebhookEndpointsWebhookEndpoint(PostWebhookEndpointsWebhookEndpointRequest) returns (google.protobuf.Empty) {}

    // <p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>
    // 
    // <p><strong>You may only log out <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
    rpc PutAccountLogout(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    // <p>Invalidates all sessions for a light account, for a platform to use during platform logout.</p>
    // 
    // <p><strong>You may only log out <a href="/docs/connect/express-accounts">Express accounts</a> connected to your platform</strong>.</p>
    rpc PutAccountsAccountLogout(PutAccountsAccountLogoutRequest) returns (google.protobuf.Empty) {}
}